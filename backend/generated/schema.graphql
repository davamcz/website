### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type Adress {
  city: String
  id: ID!
  postalCode: String
  street: String
}

input AdressWhereInput {
  AND: [AdressWhereInput!]
  city: String
  city_contains: String
  city_ends_with: String
  city_gt: String
  city_gte: String
  city_in: [String!]
  city_lt: String
  city_lte: String
  city_not: String
  city_not_contains: String
  city_not_ends_with: String
  city_not_in: [String!]
  city_not_starts_with: String
  city_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [AdressWhereInput!]
  OR: [AdressWhereInput!]
  postalCode: String
  postalCode_contains: String
  postalCode_ends_with: String
  postalCode_gt: String
  postalCode_gte: String
  postalCode_in: [String!]
  postalCode_lt: String
  postalCode_lte: String
  postalCode_not: String
  postalCode_not_contains: String
  postalCode_not_ends_with: String
  postalCode_not_in: [String!]
  postalCode_not_starts_with: String
  postalCode_starts_with: String
  street: String
  street_contains: String
  street_ends_with: String
  street_gt: String
  street_gte: String
  street_in: [String!]
  street_lt: String
  street_lte: String
  street_not: String
  street_not_contains: String
  street_not_ends_with: String
  street_not_in: [String!]
  street_not_starts_with: String
  street_starts_with: String
}

type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type File {
  fileName: String!
  id: ID!
  key: String!
}

enum FileOrderByInput {
  createdAt_ASC
  createdAt_DESC
  encoding_ASC
  encoding_DESC
  fileName_ASC
  fileName_DESC
  id_ASC
  id_DESC
  key_ASC
  key_DESC
  mimeType_ASC
  mimeType_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

input FileWhereInput {
  AND: [FileWhereInput!]
  encoding: String
  encoding_contains: String
  encoding_ends_with: String
  encoding_gt: String
  encoding_gte: String
  encoding_in: [String!]
  encoding_lt: String
  encoding_lte: String
  encoding_not: String
  encoding_not_contains: String
  encoding_not_ends_with: String
  encoding_not_in: [String!]
  encoding_not_starts_with: String
  encoding_starts_with: String
  fileName: String
  fileName_contains: String
  fileName_ends_with: String
  fileName_gt: String
  fileName_gte: String
  fileName_in: [String!]
  fileName_lt: String
  fileName_lte: String
  fileName_not: String
  fileName_not_contains: String
  fileName_not_ends_with: String
  fileName_not_in: [String!]
  fileName_not_starts_with: String
  fileName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  key: String
  key_contains: String
  key_ends_with: String
  key_gt: String
  key_gte: String
  key_in: [String!]
  key_lt: String
  key_lte: String
  key_not: String
  key_not_contains: String
  key_not_ends_with: String
  key_not_in: [String!]
  key_not_starts_with: String
  key_starts_with: String
  mimeType: String
  mimeType_contains: String
  mimeType_ends_with: String
  mimeType_gt: String
  mimeType_gte: String
  mimeType_in: [String!]
  mimeType_lt: String
  mimeType_lte: String
  mimeType_not: String
  mimeType_not_contains: String
  mimeType_not_ends_with: String
  mimeType_not_in: [String!]
  mimeType_not_starts_with: String
  mimeType_starts_with: String
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type Gallery {
  id: ID!
  images(after: String, before: String, first: Int, last: Int, orderBy: FileOrderByInput, skip: Int, where: FileWhereInput): [File!]
}

input GalleryWhereInput {
  AND: [GalleryWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  images_every: FileWhereInput
  images_none: FileWhereInput
  images_some: FileWhereInput
  NOT: [GalleryWhereInput!]
  OR: [GalleryWhereInput!]
}

type Mutation {
  """Create new Fundlamb offer"""
  createOffer(amount: Int!, description: String!, email: String!, firstName: String!, images: [ID!]!, lastName: String!, offerName: String!, organizationId: ID!, price: Int!, publicOffer: Boolean!, transport: String!): Offer!
  createOrganization(active: Boolean, apiId: Int!, apiSecret: String!, description: String!, logoId: ID!, name: String!, organizationId: Int!, url: String!): Organization!
  createTransaction(amount: Int!, comment: String, email: String!, firstName: String!, lastName: String!, offerId: ID!): Transaction!
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, firstName: String!, lastName: String!, password: String!): AuthPayload!
  updateUser(city: String!, firstName: String!, lastName: String!, postalCode: String!, street: String!): User!
  uploadFile(directory: String, file: Upload!): File!
}

type Offer {
  active: Boolean
  amount: Int!
  beneficator: Organization!
  createdAt: DateTime
  deletedAt: DateTime
  description: String!
  email: String!
  firstName: String!
  gallery: Gallery!
  id: ID!
  lastName: String!
  name: String!
  price: Int!
  publicOffer: Boolean
  remainingAmount: Int!
  transactions(after: String, before: String, first: Int, last: Int, orderBy: TransactionOrderByInput, skip: Int, where: TransactionWhereInput): [Transaction!]
  transport: String
  updatedAt: DateTime
  user: User!
}

enum OfferOrderByInput {
  active_ASC
  active_DESC
  amount_ASC
  amount_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  description_ASC
  description_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  publicOffer_ASC
  publicOffer_DESC
  transport_ASC
  transport_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OfferWhereInput {
  active: Boolean
  active_not: Boolean
  amount: Int
  amount_gt: Int
  amount_gte: Int
  amount_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_not: Int
  amount_not_in: [Int!]
  AND: [OfferWhereInput!]
  beneficator: OrganizationWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  deletedAt: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedAt_in: [DateTime!]
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_not: DateTime
  deletedAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  firstName: String
  firstName_contains: String
  firstName_ends_with: String
  firstName_gt: String
  firstName_gte: String
  firstName_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_not: String
  firstName_not_contains: String
  firstName_not_ends_with: String
  firstName_not_in: [String!]
  firstName_not_starts_with: String
  firstName_starts_with: String
  gallery: GalleryWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lastName: String
  lastName_contains: String
  lastName_ends_with: String
  lastName_gt: String
  lastName_gte: String
  lastName_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_not: String
  lastName_not_contains: String
  lastName_not_ends_with: String
  lastName_not_in: [String!]
  lastName_not_starts_with: String
  lastName_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OfferWhereInput!]
  OR: [OfferWhereInput!]
  price: Int
  price_gt: Int
  price_gte: Int
  price_in: [Int!]
  price_lt: Int
  price_lte: Int
  price_not: Int
  price_not_in: [Int!]
  publicOffer: Boolean
  publicOffer_not: Boolean
  transactions_every: TransactionWhereInput
  transactions_none: TransactionWhereInput
  transactions_some: TransactionWhereInput
  transport: String
  transport_contains: String
  transport_ends_with: String
  transport_gt: String
  transport_gte: String
  transport_in: [String!]
  transport_lt: String
  transport_lte: String
  transport_not: String
  transport_not_contains: String
  transport_not_ends_with: String
  transport_not_in: [String!]
  transport_not_starts_with: String
  transport_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

type Organization {
  apiId: Int
  description: String!
  id: ID!
  logo: File!
  name: String!
  offers(after: String, before: String, first: Int, last: Int, orderBy: OfferOrderByInput, skip: Int, where: OfferWhereInput): [Offer!]
  projectId: Int
  url: String!
}

input OrganizationWhereInput {
  active: Boolean
  active_not: Boolean
  AND: [OrganizationWhereInput!]
  apiId: Int
  apiId_gt: Int
  apiId_gte: Int
  apiId_in: [Int!]
  apiId_lt: Int
  apiId_lte: Int
  apiId_not: Int
  apiId_not_in: [Int!]
  apiSecret: String
  apiSecret_contains: String
  apiSecret_ends_with: String
  apiSecret_gt: String
  apiSecret_gte: String
  apiSecret_in: [String!]
  apiSecret_lt: String
  apiSecret_lte: String
  apiSecret_not: String
  apiSecret_not_contains: String
  apiSecret_not_ends_with: String
  apiSecret_not_in: [String!]
  apiSecret_not_starts_with: String
  apiSecret_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  deletedAt: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedAt_in: [DateTime!]
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_not: DateTime
  deletedAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  logo: FileWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrganizationWhereInput!]
  offers_every: OfferWhereInput
  offers_none: OfferWhereInput
  offers_some: OfferWhereInput
  OR: [OrganizationWhereInput!]
  organizationId: Int
  organizationId_gt: Int
  organizationId_gte: Int
  organizationId_in: [Int!]
  organizationId_lt: Int
  organizationId_lte: Int
  organizationId_not: Int
  organizationId_not_in: [Int!]
  projectId: Int
  projectId_gt: Int
  projectId_gte: Int
  projectId_in: [Int!]
  projectId_lt: Int
  projectId_lte: Int
  projectId_not: Int
  projectId_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

input OrganizationWhereUniqueInput {
  id: ID
}

type Query {
  getTransactionStatus(id: ID!): Transaction!
  offer(id: ID!): Offer
  offers(active: Boolean): [Offer!]!
  organization(where: OrganizationWhereUniqueInput!): Organization
  organizations: [Organization!]!
  recentTransactions: [Transaction!]!
  user: User
}

type Transaction {
  amount: Int!
  createdAt: DateTime
  donatedAmount: Int
  firstName: String!
  id: ID!
  lastName: String!
  offer: Offer!
  status: TransactionStatus!
}

enum TransactionOrderByInput {
  amount_ASC
  amount_DESC
  comment_ASC
  comment_DESC
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  donatedAmount_ASC
  donatedAmount_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastName_ASC
  lastName_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum TransactionStatus {
  FAILED
  INSUFFICIENT
  PAID
  PENDING
}

input TransactionWhereInput {
  amount: Int
  amount_gt: Int
  amount_gte: Int
  amount_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_not: Int
  amount_not_in: [Int!]
  AND: [TransactionWhereInput!]
  comment: String
  comment_contains: String
  comment_ends_with: String
  comment_gt: String
  comment_gte: String
  comment_in: [String!]
  comment_lt: String
  comment_lte: String
  comment_not: String
  comment_not_contains: String
  comment_not_ends_with: String
  comment_not_in: [String!]
  comment_not_starts_with: String
  comment_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  deletedAt: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedAt_in: [DateTime!]
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_not: DateTime
  deletedAt_not_in: [DateTime!]
  donatedAmount: Int
  donatedAmount_gt: Int
  donatedAmount_gte: Int
  donatedAmount_in: [Int!]
  donatedAmount_lt: Int
  donatedAmount_lte: Int
  donatedAmount_not: Int
  donatedAmount_not_in: [Int!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  firstName: String
  firstName_contains: String
  firstName_ends_with: String
  firstName_gt: String
  firstName_gte: String
  firstName_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_not: String
  firstName_not_contains: String
  firstName_not_ends_with: String
  firstName_not_in: [String!]
  firstName_not_starts_with: String
  firstName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lastName: String
  lastName_contains: String
  lastName_ends_with: String
  lastName_gt: String
  lastName_gte: String
  lastName_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_not: String
  lastName_not_contains: String
  lastName_not_ends_with: String
  lastName_not_in: [String!]
  lastName_not_starts_with: String
  lastName_starts_with: String
  NOT: [TransactionWhereInput!]
  offer: OfferWhereInput
  OR: [TransactionWhereInput!]
  status: TransactionStatus
  status_in: [TransactionStatus!]
  status_not: TransactionStatus
  status_not_in: [TransactionStatus!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  adress: Adress
  email: String!
  firstName: String
  fullName: String!
  lastName: String
  shortName: String!
}

enum UserRole {
  ADMIN
  USER
}

input UserWhereInput {
  adress: AdressWhereInput
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  firstName: String
  firstName_contains: String
  firstName_ends_with: String
  firstName_gt: String
  firstName_gte: String
  firstName_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_not: String
  firstName_not_contains: String
  firstName_not_ends_with: String
  firstName_not_in: [String!]
  firstName_not_starts_with: String
  firstName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lastName: String
  lastName_contains: String
  lastName_ends_with: String
  lastName_gt: String
  lastName_gte: String
  lastName_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_not: String
  lastName_not_contains: String
  lastName_not_ends_with: String
  lastName_not_in: [String!]
  lastName_not_starts_with: String
  lastName_starts_with: String
  NOT: [UserWhereInput!]
  offers_every: OfferWhereInput
  offers_none: OfferWhereInput
  offers_some: OfferWhereInput
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  role: UserRole
  role_in: [UserRole!]
  role_not: UserRole
  role_not_in: [UserRole!]
}
