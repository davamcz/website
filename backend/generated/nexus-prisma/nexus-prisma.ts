/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      Offer: OfferObject
      Transaction: TransactionObject
      Organization: OrganizationObject
      File: FileObject
      Adress: AdressObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      AdressConnection: AdressConnectionObject
      AdressEdge: AdressEdgeObject
      AggregateAdress: AggregateAdressObject
      FileConnection: FileConnectionObject
      FileEdge: FileEdgeObject
      AggregateFile: AggregateFileObject
      OfferConnection: OfferConnectionObject
      OfferEdge: OfferEdgeObject
      AggregateOffer: AggregateOfferObject
      TransactionConnection: TransactionConnectionObject
      TransactionEdge: TransactionEdgeObject
      AggregateTransaction: AggregateTransactionObject
      OrganizationConnection: OrganizationConnectionObject
      OrganizationEdge: OrganizationEdgeObject
      AggregateOrganization: AggregateOrganizationObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      AdressSubscriptionPayload: AdressSubscriptionPayloadObject
      AdressPreviousValues: AdressPreviousValuesObject
      FileSubscriptionPayload: FileSubscriptionPayloadObject
      FilePreviousValues: FilePreviousValuesObject
      OfferSubscriptionPayload: OfferSubscriptionPayloadObject
      OfferPreviousValues: OfferPreviousValuesObject
      TransactionSubscriptionPayload: TransactionSubscriptionPayloadObject
      TransactionPreviousValues: TransactionPreviousValuesObject
      OrganizationSubscriptionPayload: OrganizationSubscriptionPayloadObject
      OrganizationPreviousValues: OrganizationPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      Offer: OfferFieldDetails
      Transaction: TransactionFieldDetails
      Organization: OrganizationFieldDetails
      File: FileFieldDetails
      Adress: AdressFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      AdressConnection: AdressConnectionFieldDetails
      AdressEdge: AdressEdgeFieldDetails
      AggregateAdress: AggregateAdressFieldDetails
      FileConnection: FileConnectionFieldDetails
      FileEdge: FileEdgeFieldDetails
      AggregateFile: AggregateFileFieldDetails
      OfferConnection: OfferConnectionFieldDetails
      OfferEdge: OfferEdgeFieldDetails
      AggregateOffer: AggregateOfferFieldDetails
      TransactionConnection: TransactionConnectionFieldDetails
      TransactionEdge: TransactionEdgeFieldDetails
      AggregateTransaction: AggregateTransactionFieldDetails
      OrganizationConnection: OrganizationConnectionFieldDetails
      OrganizationEdge: OrganizationEdgeFieldDetails
      AggregateOrganization: AggregateOrganizationFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      AdressSubscriptionPayload: AdressSubscriptionPayloadFieldDetails
      AdressPreviousValues: AdressPreviousValuesFieldDetails
      FileSubscriptionPayload: FileSubscriptionPayloadFieldDetails
      FilePreviousValues: FilePreviousValuesFieldDetails
      OfferSubscriptionPayload: OfferSubscriptionPayloadFieldDetails
      OfferPreviousValues: OfferPreviousValuesFieldDetails
      TransactionSubscriptionPayload: TransactionSubscriptionPayloadFieldDetails
      TransactionPreviousValues: TransactionPreviousValuesFieldDetails
      OrganizationSubscriptionPayload: OrganizationSubscriptionPayloadFieldDetails
      OrganizationPreviousValues: OrganizationPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      OfferWhereInput: OfferWhereInputInputObject
      TransactionWhereInput: TransactionWhereInputInputObject
      OrganizationWhereInput: OrganizationWhereInputInputObject
      FileWhereInput: FileWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      AdressWhereInput: AdressWhereInputInputObject
      AdressWhereUniqueInput: AdressWhereUniqueInputInputObject
      FileWhereUniqueInput: FileWhereUniqueInputInputObject
      OfferWhereUniqueInput: OfferWhereUniqueInputInputObject
      TransactionWhereUniqueInput: TransactionWhereUniqueInputInputObject
      OrganizationWhereUniqueInput: OrganizationWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      OfferCreateManyWithoutUserInput: OfferCreateManyWithoutUserInputInputObject
      OfferCreateWithoutUserInput: OfferCreateWithoutUserInputInputObject
      TransactionCreateManyWithoutOfferInput: TransactionCreateManyWithoutOfferInputInputObject
      TransactionCreateWithoutOfferInput: TransactionCreateWithoutOfferInputInputObject
      OrganizationCreateOneWithoutOffersInput: OrganizationCreateOneWithoutOffersInputInputObject
      OrganizationCreateWithoutOffersInput: OrganizationCreateWithoutOffersInputInputObject
      FileCreateOneInput: FileCreateOneInputInputObject
      FileCreateInput: FileCreateInputInputObject
      AdressCreateOneInput: AdressCreateOneInputInputObject
      AdressCreateInput: AdressCreateInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      OfferUpdateManyWithoutUserInput: OfferUpdateManyWithoutUserInputInputObject
      OfferUpdateWithWhereUniqueWithoutUserInput: OfferUpdateWithWhereUniqueWithoutUserInputInputObject
      OfferUpdateWithoutUserDataInput: OfferUpdateWithoutUserDataInputInputObject
      TransactionUpdateManyWithoutOfferInput: TransactionUpdateManyWithoutOfferInputInputObject
      TransactionUpdateWithWhereUniqueWithoutOfferInput: TransactionUpdateWithWhereUniqueWithoutOfferInputInputObject
      TransactionUpdateWithoutOfferDataInput: TransactionUpdateWithoutOfferDataInputInputObject
      TransactionUpsertWithWhereUniqueWithoutOfferInput: TransactionUpsertWithWhereUniqueWithoutOfferInputInputObject
      TransactionScalarWhereInput: TransactionScalarWhereInputInputObject
      TransactionUpdateManyWithWhereNestedInput: TransactionUpdateManyWithWhereNestedInputInputObject
      TransactionUpdateManyDataInput: TransactionUpdateManyDataInputInputObject
      OrganizationUpdateOneRequiredWithoutOffersInput: OrganizationUpdateOneRequiredWithoutOffersInputInputObject
      OrganizationUpdateWithoutOffersDataInput: OrganizationUpdateWithoutOffersDataInputInputObject
      FileUpdateOneRequiredInput: FileUpdateOneRequiredInputInputObject
      FileUpdateDataInput: FileUpdateDataInputInputObject
      FileUpsertNestedInput: FileUpsertNestedInputInputObject
      OrganizationUpsertWithoutOffersInput: OrganizationUpsertWithoutOffersInputInputObject
      OfferUpsertWithWhereUniqueWithoutUserInput: OfferUpsertWithWhereUniqueWithoutUserInputInputObject
      OfferScalarWhereInput: OfferScalarWhereInputInputObject
      OfferUpdateManyWithWhereNestedInput: OfferUpdateManyWithWhereNestedInputInputObject
      OfferUpdateManyDataInput: OfferUpdateManyDataInputInputObject
      AdressUpdateOneInput: AdressUpdateOneInputInputObject
      AdressUpdateDataInput: AdressUpdateDataInputInputObject
      AdressUpsertNestedInput: AdressUpsertNestedInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      AdressUpdateInput: AdressUpdateInputInputObject
      AdressUpdateManyMutationInput: AdressUpdateManyMutationInputInputObject
      FileUpdateInput: FileUpdateInputInputObject
      FileUpdateManyMutationInput: FileUpdateManyMutationInputInputObject
      OfferCreateInput: OfferCreateInputInputObject
      UserCreateOneWithoutOffersInput: UserCreateOneWithoutOffersInputInputObject
      UserCreateWithoutOffersInput: UserCreateWithoutOffersInputInputObject
      OfferUpdateInput: OfferUpdateInputInputObject
      UserUpdateOneRequiredWithoutOffersInput: UserUpdateOneRequiredWithoutOffersInputInputObject
      UserUpdateWithoutOffersDataInput: UserUpdateWithoutOffersDataInputInputObject
      UserUpsertWithoutOffersInput: UserUpsertWithoutOffersInputInputObject
      OfferUpdateManyMutationInput: OfferUpdateManyMutationInputInputObject
      TransactionCreateInput: TransactionCreateInputInputObject
      OfferCreateOneWithoutTransactionsInput: OfferCreateOneWithoutTransactionsInputInputObject
      OfferCreateWithoutTransactionsInput: OfferCreateWithoutTransactionsInputInputObject
      TransactionUpdateInput: TransactionUpdateInputInputObject
      OfferUpdateOneRequiredWithoutTransactionsInput: OfferUpdateOneRequiredWithoutTransactionsInputInputObject
      OfferUpdateWithoutTransactionsDataInput: OfferUpdateWithoutTransactionsDataInputInputObject
      OfferUpsertWithoutTransactionsInput: OfferUpsertWithoutTransactionsInputInputObject
      TransactionUpdateManyMutationInput: TransactionUpdateManyMutationInputInputObject
      OrganizationCreateInput: OrganizationCreateInputInputObject
      OfferCreateManyWithoutBeneficatorInput: OfferCreateManyWithoutBeneficatorInputInputObject
      OfferCreateWithoutBeneficatorInput: OfferCreateWithoutBeneficatorInputInputObject
      OrganizationUpdateInput: OrganizationUpdateInputInputObject
      OfferUpdateManyWithoutBeneficatorInput: OfferUpdateManyWithoutBeneficatorInputInputObject
      OfferUpdateWithWhereUniqueWithoutBeneficatorInput: OfferUpdateWithWhereUniqueWithoutBeneficatorInputInputObject
      OfferUpdateWithoutBeneficatorDataInput: OfferUpdateWithoutBeneficatorDataInputInputObject
      OfferUpsertWithWhereUniqueWithoutBeneficatorInput: OfferUpsertWithWhereUniqueWithoutBeneficatorInputInputObject
      OrganizationUpdateManyMutationInput: OrganizationUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      AdressSubscriptionWhereInput: AdressSubscriptionWhereInputInputObject
      FileSubscriptionWhereInput: FileSubscriptionWhereInputInputObject
      OfferSubscriptionWhereInput: OfferSubscriptionWhereInputInputObject
      TransactionSubscriptionWhereInput: TransactionSubscriptionWhereInputInputObject
      OrganizationSubscriptionWhereInput: OrganizationSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    UserRole: UserRoleValues,
    TransactionStatus: TransactionStatusValues,
    OfferOrderByInput: OfferOrderByInputValues,
    TransactionOrderByInput: TransactionOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    AdressOrderByInput: AdressOrderByInputValues,
    FileOrderByInput: FileOrderByInputValues,
    OrganizationOrderByInput: OrganizationOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'adress', args?: QueryAdressArgs[] | false, alias?: string  } 
  | { name: 'adresses', args?: QueryAdressesArgs[] | false, alias?: string  } 
  | { name: 'adressesConnection', args?: QueryAdressesConnectionArgs[] | false, alias?: string  } 
  | { name: 'file', args?: QueryFileArgs[] | false, alias?: string  } 
  | { name: 'files', args?: QueryFilesArgs[] | false, alias?: string  } 
  | { name: 'filesConnection', args?: QueryFilesConnectionArgs[] | false, alias?: string  } 
  | { name: 'offer', args?: QueryOfferArgs[] | false, alias?: string  } 
  | { name: 'offers', args?: QueryOffersArgs[] | false, alias?: string  } 
  | { name: 'offersConnection', args?: QueryOffersConnectionArgs[] | false, alias?: string  } 
  | { name: 'transaction', args?: QueryTransactionArgs[] | false, alias?: string  } 
  | { name: 'transactions', args?: QueryTransactionsArgs[] | false, alias?: string  } 
  | { name: 'transactionsConnection', args?: QueryTransactionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: QueryOrganizationArgs[] | false, alias?: string  } 
  | { name: 'organizations', args?: QueryOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'organizationsConnection', args?: QueryOrganizationsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'adress'
  | 'adresses'
  | 'adressesConnection'
  | 'file'
  | 'files'
  | 'filesConnection'
  | 'offer'
  | 'offers'
  | 'offersConnection'
  | 'transaction'
  | 'transactions'
  | 'transactionsConnection'
  | 'organization'
  | 'organizations'
  | 'organizationsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAdressArgs =
  | 'where'
type QueryAdressesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAdressesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryFileArgs =
  | 'where'
type QueryFilesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryFilesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOfferArgs =
  | 'where'
type QueryOffersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOffersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTransactionArgs =
  | 'where'
type QueryTransactionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTransactionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationArgs =
  | 'where'
type QueryOrganizationsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrganizationsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  adress: {
    type: 'Adress'
    args: Record<QueryAdressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AdressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress | null> | prisma.Adress | null
  }
  adresses: {
    type: 'Adress'
    args: Record<QueryAdressesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AdressWhereInput | null, orderBy?: prisma.AdressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress[]> | prisma.Adress[]
  }
  adressesConnection: {
    type: 'AdressConnection'
    args: Record<QueryAdressesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AdressWhereInput | null, orderBy?: prisma.AdressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdressConnection> | prisma.AdressConnection
  }
  file: {
    type: 'File'
    args: Record<QueryFileArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: FileWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File | null> | prisma.File | null
  }
  files: {
    type: 'File'
    args: Record<QueryFilesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: FileWhereInput | null, orderBy?: prisma.FileOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File[]> | prisma.File[]
  }
  filesConnection: {
    type: 'FileConnection'
    args: Record<QueryFilesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: FileWhereInput | null, orderBy?: prisma.FileOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FileConnection> | prisma.FileConnection
  }
  offer: {
    type: 'Offer'
    args: Record<QueryOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OfferWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  offers: {
    type: 'Offer'
    args: Record<QueryOffersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OfferWhereInput | null, orderBy?: prisma.OfferOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer[]> | prisma.Offer[]
  }
  offersConnection: {
    type: 'OfferConnection'
    args: Record<QueryOffersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OfferWhereInput | null, orderBy?: prisma.OfferOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferConnection> | prisma.OfferConnection
  }
  transaction: {
    type: 'Transaction'
    args: Record<QueryTransactionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TransactionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction | null> | prisma.Transaction | null
  }
  transactions: {
    type: 'Transaction'
    args: Record<QueryTransactionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TransactionWhereInput | null, orderBy?: prisma.TransactionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction[]> | prisma.Transaction[]
  }
  transactionsConnection: {
    type: 'TransactionConnection'
    args: Record<QueryTransactionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TransactionWhereInput | null, orderBy?: prisma.TransactionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TransactionConnection> | prisma.TransactionConnection
  }
  organization: {
    type: 'Organization'
    args: Record<QueryOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  organizations: {
    type: 'Organization'
    args: Record<QueryOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization[]> | prisma.Organization[]
  }
  organizationsConnection: {
    type: 'OrganizationConnection'
    args: Record<QueryOrganizationsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrganizationWhereInput | null, orderBy?: prisma.OrganizationOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationConnection> | prisma.OrganizationConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 
  | { name: 'offers', args?: UserOffersArgs[] | false, alias?: string  } 
  | { name: 'adress', args?: [] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'password'
  | 'role'
  | 'offers'
  | 'adress'


type UserOffersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  role: {
    type: 'UserRole'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserRole> | prisma.UserRole
  }
  offers: {
    type: 'Offer'
    args: Record<UserOffersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: OfferWhereInput | null, orderBy?: prisma.OfferOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer[]> | prisma.Offer[]
  }
  adress: {
    type: 'Adress'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress | null> | prisma.Adress | null
  }
}
  

// Types for Offer

type OfferObject =
  | OfferFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'active', args?: [] | false, alias?: string  } 
  | { name: 'public', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'transactions', args?: OfferTransactionsArgs[] | false, alias?: string  } 
  | { name: 'beneficator', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'transport', args?: [] | false, alias?: string  } 

type OfferFields =
  | 'id'
  | 'active'
  | 'public'
  | 'amount'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'transactions'
  | 'beneficator'
  | 'price'
  | 'name'
  | 'user'
  | 'description'
  | 'transport'


type OfferTransactionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OfferFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  active: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  public: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  transactions: {
    type: 'Transaction'
    args: Record<OfferTransactionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Offer">,
      args: { where?: TransactionWhereInput | null, orderBy?: prisma.TransactionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction[]> | prisma.Transaction[]
  }
  beneficator: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Offer">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  price: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Offer">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  transport: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Transaction

type TransactionObject =
  | TransactionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'comment', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'donatedAmount', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'offer', args?: [] | false, alias?: string  } 

type TransactionFields =
  | 'id'
  | 'amount'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'comment'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt'
  | 'donatedAmount'
  | 'status'
  | 'offer'



  

export interface TransactionFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  comment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  donatedAmount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'TransactionStatus'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Transaction">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TransactionStatus> | prisma.TransactionStatus
  }
  offer: {
    type: 'Offer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Transaction">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
}
  

// Types for Organization

type OrganizationObject =
  | OrganizationFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiId', args?: [] | false, alias?: string  } 
  | { name: 'apiSecret', args?: [] | false, alias?: string  } 
  | { name: 'organizationId', args?: [] | false, alias?: string  } 
  | { name: 'active', args?: [] | false, alias?: string  } 
  | { name: 'logo', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'offers', args?: OrganizationOffersArgs[] | false, alias?: string  } 
  | { name: 'projectId', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type OrganizationFields =
  | 'id'
  | 'apiId'
  | 'apiSecret'
  | 'organizationId'
  | 'active'
  | 'logo'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt'
  | 'name'
  | 'offers'
  | 'projectId'
  | 'description'
  | 'url'


type OrganizationOffersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrganizationFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  apiSecret: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  organizationId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  active: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  logo: {
    type: 'File'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Organization">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File> | prisma.File
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  offers: {
    type: 'Offer'
    args: Record<OrganizationOffersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Organization">,
      args: { where?: OfferWhereInput | null, orderBy?: prisma.OfferOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer[]> | prisma.Offer[]
  }
  projectId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for File

type FileObject =
  | FileFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'fileName', args?: [] | false, alias?: string  } 
  | { name: 'mimeType', args?: [] | false, alias?: string  } 
  | { name: 'encoding', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type FileFields =
  | 'id'
  | 'key'
  | 'fileName'
  | 'mimeType'
  | 'encoding'
  | 'url'



  

export interface FileFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fileName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mimeType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  encoding: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Adress

type AdressObject =
  | AdressFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'street', args?: [] | false, alias?: string  } 
  | { name: 'postalCode', args?: [] | false, alias?: string  } 

type AdressFields =
  | 'id'
  | 'city'
  | 'street'
  | 'postalCode'



  

export interface AdressFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  street: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  postalCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AdressConnection

type AdressConnectionObject =
  | AdressConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AdressConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AdressConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AdressEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AdressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdressEdge[]> | prisma.AdressEdge[]
  }
  aggregate: {
    type: 'AggregateAdress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAdress> | prisma.AggregateAdress
  }
}
  

// Types for AdressEdge

type AdressEdgeObject =
  | AdressEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AdressEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AdressEdgeFieldDetails {
  node: {
    type: 'Adress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdressEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress> | prisma.Adress
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAdress

type AggregateAdressObject =
  | AggregateAdressFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAdressFields =
  | 'count'



  

export interface AggregateAdressFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for FileConnection

type FileConnectionObject =
  | FileConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type FileConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface FileConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FileConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'FileEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"FileConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FileEdge[]> | prisma.FileEdge[]
  }
  aggregate: {
    type: 'AggregateFile'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FileConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateFile> | prisma.AggregateFile
  }
}
  

// Types for FileEdge

type FileEdgeObject =
  | FileEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type FileEdgeFields =
  | 'node'
  | 'cursor'



  

export interface FileEdgeFieldDetails {
  node: {
    type: 'File'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FileEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File> | prisma.File
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateFile

type AggregateFileObject =
  | AggregateFileFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateFileFields =
  | 'count'



  

export interface AggregateFileFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OfferConnection

type OfferConnectionObject =
  | OfferConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OfferConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OfferConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OfferEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OfferConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferEdge[]> | prisma.OfferEdge[]
  }
  aggregate: {
    type: 'AggregateOffer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOffer> | prisma.AggregateOffer
  }
}
  

// Types for OfferEdge

type OfferEdgeObject =
  | OfferEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OfferEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OfferEdgeFieldDetails {
  node: {
    type: 'Offer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOffer

type AggregateOfferObject =
  | AggregateOfferFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOfferFields =
  | 'count'



  

export interface AggregateOfferFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TransactionConnection

type TransactionConnectionObject =
  | TransactionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TransactionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TransactionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TransactionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TransactionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TransactionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TransactionEdge[]> | prisma.TransactionEdge[]
  }
  aggregate: {
    type: 'AggregateTransaction'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TransactionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTransaction> | prisma.AggregateTransaction
  }
}
  

// Types for TransactionEdge

type TransactionEdgeObject =
  | TransactionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TransactionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TransactionEdgeFieldDetails {
  node: {
    type: 'Transaction'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TransactionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction> | prisma.Transaction
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTransaction

type AggregateTransactionObject =
  | AggregateTransactionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTransactionFields =
  | 'count'



  

export interface AggregateTransactionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrganizationConnection

type OrganizationConnectionObject =
  | OrganizationConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrganizationConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrganizationConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrganizationEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationEdge[]> | prisma.OrganizationEdge[]
  }
  aggregate: {
    type: 'AggregateOrganization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrganization> | prisma.AggregateOrganization
  }
}
  

// Types for OrganizationEdge

type OrganizationEdgeObject =
  | OrganizationEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrganizationEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrganizationEdgeFieldDetails {
  node: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrganization

type AggregateOrganizationObject =
  | AggregateOrganizationFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrganizationFields =
  | 'count'



  

export interface AggregateOrganizationFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createAdress', args?: MutationCreateAdressArgs[] | false, alias?: string  } 
  | { name: 'updateAdress', args?: MutationUpdateAdressArgs[] | false, alias?: string  } 
  | { name: 'updateManyAdresses', args?: MutationUpdateManyAdressesArgs[] | false, alias?: string  } 
  | { name: 'upsertAdress', args?: MutationUpsertAdressArgs[] | false, alias?: string  } 
  | { name: 'deleteAdress', args?: MutationDeleteAdressArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAdresses', args?: MutationDeleteManyAdressesArgs[] | false, alias?: string  } 
  | { name: 'createFile', args?: MutationCreateFileArgs[] | false, alias?: string  } 
  | { name: 'updateFile', args?: MutationUpdateFileArgs[] | false, alias?: string  } 
  | { name: 'updateManyFiles', args?: MutationUpdateManyFilesArgs[] | false, alias?: string  } 
  | { name: 'upsertFile', args?: MutationUpsertFileArgs[] | false, alias?: string  } 
  | { name: 'deleteFile', args?: MutationDeleteFileArgs[] | false, alias?: string  } 
  | { name: 'deleteManyFiles', args?: MutationDeleteManyFilesArgs[] | false, alias?: string  } 
  | { name: 'createOffer', args?: MutationCreateOfferArgs[] | false, alias?: string  } 
  | { name: 'updateOffer', args?: MutationUpdateOfferArgs[] | false, alias?: string  } 
  | { name: 'updateManyOffers', args?: MutationUpdateManyOffersArgs[] | false, alias?: string  } 
  | { name: 'upsertOffer', args?: MutationUpsertOfferArgs[] | false, alias?: string  } 
  | { name: 'deleteOffer', args?: MutationDeleteOfferArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOffers', args?: MutationDeleteManyOffersArgs[] | false, alias?: string  } 
  | { name: 'createTransaction', args?: MutationCreateTransactionArgs[] | false, alias?: string  } 
  | { name: 'updateTransaction', args?: MutationUpdateTransactionArgs[] | false, alias?: string  } 
  | { name: 'updateManyTransactions', args?: MutationUpdateManyTransactionsArgs[] | false, alias?: string  } 
  | { name: 'upsertTransaction', args?: MutationUpsertTransactionArgs[] | false, alias?: string  } 
  | { name: 'deleteTransaction', args?: MutationDeleteTransactionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTransactions', args?: MutationDeleteManyTransactionsArgs[] | false, alias?: string  } 
  | { name: 'createOrganization', args?: MutationCreateOrganizationArgs[] | false, alias?: string  } 
  | { name: 'updateOrganization', args?: MutationUpdateOrganizationArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrganizations', args?: MutationUpdateManyOrganizationsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrganization', args?: MutationUpsertOrganizationArgs[] | false, alias?: string  } 
  | { name: 'deleteOrganization', args?: MutationDeleteOrganizationArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrganizations', args?: MutationDeleteManyOrganizationsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createAdress'
  | 'updateAdress'
  | 'updateManyAdresses'
  | 'upsertAdress'
  | 'deleteAdress'
  | 'deleteManyAdresses'
  | 'createFile'
  | 'updateFile'
  | 'updateManyFiles'
  | 'upsertFile'
  | 'deleteFile'
  | 'deleteManyFiles'
  | 'createOffer'
  | 'updateOffer'
  | 'updateManyOffers'
  | 'upsertOffer'
  | 'deleteOffer'
  | 'deleteManyOffers'
  | 'createTransaction'
  | 'updateTransaction'
  | 'updateManyTransactions'
  | 'upsertTransaction'
  | 'deleteTransaction'
  | 'deleteManyTransactions'
  | 'createOrganization'
  | 'updateOrganization'
  | 'updateManyOrganizations'
  | 'upsertOrganization'
  | 'deleteOrganization'
  | 'deleteManyOrganizations'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateAdressArgs =
  | 'data'
type MutationUpdateAdressArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAdressesArgs =
  | 'data'
  | 'where'
type MutationUpsertAdressArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAdressArgs =
  | 'where'
type MutationDeleteManyAdressesArgs =
  | 'where'
type MutationCreateFileArgs =
  | 'data'
type MutationUpdateFileArgs =
  | 'data'
  | 'where'
type MutationUpdateManyFilesArgs =
  | 'data'
  | 'where'
type MutationUpsertFileArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteFileArgs =
  | 'where'
type MutationDeleteManyFilesArgs =
  | 'where'
type MutationCreateOfferArgs =
  | 'data'
type MutationUpdateOfferArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOffersArgs =
  | 'data'
  | 'where'
type MutationUpsertOfferArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOfferArgs =
  | 'where'
type MutationDeleteManyOffersArgs =
  | 'where'
type MutationCreateTransactionArgs =
  | 'data'
type MutationUpdateTransactionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyTransactionsArgs =
  | 'data'
  | 'where'
type MutationUpsertTransactionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTransactionArgs =
  | 'where'
type MutationDeleteManyTransactionsArgs =
  | 'where'
type MutationCreateOrganizationArgs =
  | 'data'
type MutationUpdateOrganizationArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrganizationsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrganizationArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrganizationArgs =
  | 'where'
type MutationDeleteManyOrganizationsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAdress: {
    type: 'Adress'
    args: Record<MutationCreateAdressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AdressCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress> | prisma.Adress
  }
  updateAdress: {
    type: 'Adress'
    args: Record<MutationUpdateAdressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AdressUpdateInput, where: AdressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress | null> | prisma.Adress | null
  }
  updateManyAdresses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAdressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AdressUpdateManyMutationInput, where?: AdressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAdress: {
    type: 'Adress'
    args: Record<MutationUpsertAdressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AdressWhereUniqueInput, create: AdressCreateInput, update: AdressUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress> | prisma.Adress
  }
  deleteAdress: {
    type: 'Adress'
    args: Record<MutationDeleteAdressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AdressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress | null> | prisma.Adress | null
  }
  deleteManyAdresses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAdressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AdressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createFile: {
    type: 'File'
    args: Record<MutationCreateFileArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FileCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File> | prisma.File
  }
  updateFile: {
    type: 'File'
    args: Record<MutationUpdateFileArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FileUpdateInput, where: FileWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File | null> | prisma.File | null
  }
  updateManyFiles: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyFilesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: FileUpdateManyMutationInput, where?: FileWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertFile: {
    type: 'File'
    args: Record<MutationUpsertFileArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: FileWhereUniqueInput, create: FileCreateInput, update: FileUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File> | prisma.File
  }
  deleteFile: {
    type: 'File'
    args: Record<MutationDeleteFileArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: FileWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File | null> | prisma.File | null
  }
  deleteManyFiles: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyFilesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: FileWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOffer: {
    type: 'Offer'
    args: Record<MutationCreateOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OfferCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
  updateOffer: {
    type: 'Offer'
    args: Record<MutationUpdateOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OfferUpdateInput, where: OfferWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  updateManyOffers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOffersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OfferUpdateManyMutationInput, where?: OfferWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOffer: {
    type: 'Offer'
    args: Record<MutationUpsertOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OfferWhereUniqueInput, create: OfferCreateInput, update: OfferUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer> | prisma.Offer
  }
  deleteOffer: {
    type: 'Offer'
    args: Record<MutationDeleteOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OfferWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  deleteManyOffers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOffersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OfferWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTransaction: {
    type: 'Transaction'
    args: Record<MutationCreateTransactionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TransactionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction> | prisma.Transaction
  }
  updateTransaction: {
    type: 'Transaction'
    args: Record<MutationUpdateTransactionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TransactionUpdateInput, where: TransactionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction | null> | prisma.Transaction | null
  }
  updateManyTransactions: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTransactionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TransactionUpdateManyMutationInput, where?: TransactionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertTransaction: {
    type: 'Transaction'
    args: Record<MutationUpsertTransactionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TransactionWhereUniqueInput, create: TransactionCreateInput, update: TransactionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction> | prisma.Transaction
  }
  deleteTransaction: {
    type: 'Transaction'
    args: Record<MutationDeleteTransactionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TransactionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction | null> | prisma.Transaction | null
  }
  deleteManyTransactions: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTransactionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TransactionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrganization: {
    type: 'Organization'
    args: Record<MutationCreateOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  updateOrganization: {
    type: 'Organization'
    args: Record<MutationUpdateOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationUpdateInput, where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  updateManyOrganizations: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrganizationUpdateManyMutationInput, where?: OrganizationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrganization: {
    type: 'Organization'
    args: Record<MutationUpsertOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationWhereUniqueInput, create: OrganizationCreateInput, update: OrganizationUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization> | prisma.Organization
  }
  deleteOrganization: {
    type: 'Organization'
    args: Record<MutationDeleteOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrganizationWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  deleteManyOrganizations: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrganizationsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrganizationWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'adress', args?: SubscriptionAdressArgs[] | false, alias?: string  } 
  | { name: 'file', args?: SubscriptionFileArgs[] | false, alias?: string  } 
  | { name: 'offer', args?: SubscriptionOfferArgs[] | false, alias?: string  } 
  | { name: 'transaction', args?: SubscriptionTransactionArgs[] | false, alias?: string  } 
  | { name: 'organization', args?: SubscriptionOrganizationArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'adress'
  | 'file'
  | 'offer'
  | 'transaction'
  | 'organization'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionAdressArgs =
  | 'where'
type SubscriptionFileArgs =
  | 'where'
type SubscriptionOfferArgs =
  | 'where'
type SubscriptionTransactionArgs =
  | 'where'
type SubscriptionOrganizationArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  adress: {
    type: 'AdressSubscriptionPayload'
    args: Record<SubscriptionAdressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AdressSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdressSubscriptionPayload | null> | prisma.AdressSubscriptionPayload | null
  }
  file: {
    type: 'FileSubscriptionPayload'
    args: Record<SubscriptionFileArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: FileSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FileSubscriptionPayload | null> | prisma.FileSubscriptionPayload | null
  }
  offer: {
    type: 'OfferSubscriptionPayload'
    args: Record<SubscriptionOfferArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OfferSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferSubscriptionPayload | null> | prisma.OfferSubscriptionPayload | null
  }
  transaction: {
    type: 'TransactionSubscriptionPayload'
    args: Record<SubscriptionTransactionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TransactionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TransactionSubscriptionPayload | null> | prisma.TransactionSubscriptionPayload | null
  }
  organization: {
    type: 'OrganizationSubscriptionPayload'
    args: Record<SubscriptionOrganizationArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrganizationSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationSubscriptionPayload | null> | prisma.OrganizationSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'role', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'password'
  | 'role'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  role: {
    type: 'UserRole'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserRole> | prisma.UserRole
  }
}
  

// Types for AdressSubscriptionPayload

type AdressSubscriptionPayloadObject =
  | AdressSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AdressSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AdressSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AdressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Adress'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AdressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Adress | null> | prisma.Adress | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AdressPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AdressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AdressPreviousValues | null> | prisma.AdressPreviousValues | null
  }
}
  

// Types for AdressPreviousValues

type AdressPreviousValuesObject =
  | AdressPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'street', args?: [] | false, alias?: string  } 
  | { name: 'postalCode', args?: [] | false, alias?: string  } 

type AdressPreviousValuesFields =
  | 'id'
  | 'city'
  | 'street'
  | 'postalCode'



  

export interface AdressPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  street: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  postalCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for FileSubscriptionPayload

type FileSubscriptionPayloadObject =
  | FileSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type FileSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface FileSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"FileSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'File'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"FileSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.File | null> | prisma.File | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'FilePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"FileSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.FilePreviousValues | null> | prisma.FilePreviousValues | null
  }
}
  

// Types for FilePreviousValues

type FilePreviousValuesObject =
  | FilePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'key', args?: [] | false, alias?: string  } 
  | { name: 'fileName', args?: [] | false, alias?: string  } 
  | { name: 'mimeType', args?: [] | false, alias?: string  } 
  | { name: 'encoding', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type FilePreviousValuesFields =
  | 'id'
  | 'key'
  | 'fileName'
  | 'mimeType'
  | 'encoding'
  | 'url'



  

export interface FilePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  fileName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  mimeType: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  encoding: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OfferSubscriptionPayload

type OfferSubscriptionPayloadObject =
  | OfferSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OfferSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OfferSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OfferSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Offer'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OfferSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Offer | null> | prisma.Offer | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OfferPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OfferSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OfferPreviousValues | null> | prisma.OfferPreviousValues | null
  }
}
  

// Types for OfferPreviousValues

type OfferPreviousValuesObject =
  | OfferPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'active', args?: [] | false, alias?: string  } 
  | { name: 'public', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'transport', args?: [] | false, alias?: string  } 

type OfferPreviousValuesFields =
  | 'id'
  | 'active'
  | 'public'
  | 'amount'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'price'
  | 'name'
  | 'description'
  | 'transport'



  

export interface OfferPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  active: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  public: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  transport: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for TransactionSubscriptionPayload

type TransactionSubscriptionPayloadObject =
  | TransactionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TransactionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TransactionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TransactionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Transaction'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TransactionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Transaction | null> | prisma.Transaction | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TransactionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TransactionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TransactionPreviousValues | null> | prisma.TransactionPreviousValues | null
  }
}
  

// Types for TransactionPreviousValues

type TransactionPreviousValuesObject =
  | TransactionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'amount', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'firstName', args?: [] | false, alias?: string  } 
  | { name: 'lastName', args?: [] | false, alias?: string  } 
  | { name: 'comment', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'donatedAmount', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 

type TransactionPreviousValuesFields =
  | 'id'
  | 'amount'
  | 'email'
  | 'firstName'
  | 'lastName'
  | 'comment'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt'
  | 'donatedAmount'
  | 'status'



  

export interface TransactionPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  amount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  comment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  donatedAmount: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'TransactionStatus'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TransactionPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TransactionStatus> | prisma.TransactionStatus
  }
}
  

// Types for OrganizationSubscriptionPayload

type OrganizationSubscriptionPayloadObject =
  | OrganizationSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrganizationSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrganizationSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Organization'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Organization | null> | prisma.Organization | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrganizationPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrganizationSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrganizationPreviousValues | null> | prisma.OrganizationPreviousValues | null
  }
}
  

// Types for OrganizationPreviousValues

type OrganizationPreviousValuesObject =
  | OrganizationPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'apiId', args?: [] | false, alias?: string  } 
  | { name: 'apiSecret', args?: [] | false, alias?: string  } 
  | { name: 'organizationId', args?: [] | false, alias?: string  } 
  | { name: 'active', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'deletedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'projectId', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'url', args?: [] | false, alias?: string  } 

type OrganizationPreviousValuesFields =
  | 'id'
  | 'apiId'
  | 'apiSecret'
  | 'organizationId'
  | 'active'
  | 'createdAt'
  | 'updatedAt'
  | 'deletedAt'
  | 'name'
  | 'projectId'
  | 'description'
  | 'url'



  

export interface OrganizationPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  apiId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  apiSecret: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  organizationId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  active: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  deletedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  projectId: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  url: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface OfferWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  active?: boolean | null
  active_not?: boolean | null
  public?: boolean | null
  public_not?: boolean | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  transactions_every?: TransactionWhereInput | null
  transactions_some?: TransactionWhereInput | null
  transactions_none?: TransactionWhereInput | null
  beneficator?: OrganizationWhereInput | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  user?: UserWhereInput | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  transport?: string | null
  transport_not?: string | null
  transport_in?: string[]
  transport_not_in?: string[]
  transport_lt?: string | null
  transport_lte?: string | null
  transport_gt?: string | null
  transport_gte?: string | null
  transport_contains?: string | null
  transport_not_contains?: string | null
  transport_starts_with?: string | null
  transport_not_starts_with?: string | null
  transport_ends_with?: string | null
  transport_not_ends_with?: string | null
  AND?: OfferWhereInput[]
  OR?: OfferWhereInput[]
  NOT?: OfferWhereInput[]
}
export type OfferWhereInputInputObject =
  | Extract<keyof OfferWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'active_not', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'public_not', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'transactions_every', alias?: string  } 
  | { name: 'transactions_some', alias?: string  } 
  | { name: 'transactions_none', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  | { name: 'transport_not', alias?: string  } 
  | { name: 'transport_in', alias?: string  } 
  | { name: 'transport_not_in', alias?: string  } 
  | { name: 'transport_lt', alias?: string  } 
  | { name: 'transport_lte', alias?: string  } 
  | { name: 'transport_gt', alias?: string  } 
  | { name: 'transport_gte', alias?: string  } 
  | { name: 'transport_contains', alias?: string  } 
  | { name: 'transport_not_contains', alias?: string  } 
  | { name: 'transport_starts_with', alias?: string  } 
  | { name: 'transport_not_starts_with', alias?: string  } 
  | { name: 'transport_ends_with', alias?: string  } 
  | { name: 'transport_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TransactionWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  comment?: string | null
  comment_not?: string | null
  comment_in?: string[]
  comment_not_in?: string[]
  comment_lt?: string | null
  comment_lte?: string | null
  comment_gt?: string | null
  comment_gte?: string | null
  comment_contains?: string | null
  comment_not_contains?: string | null
  comment_starts_with?: string | null
  comment_not_starts_with?: string | null
  comment_ends_with?: string | null
  comment_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  donatedAmount?: number | null
  donatedAmount_not?: number | null
  donatedAmount_in?: number[]
  donatedAmount_not_in?: number[]
  donatedAmount_lt?: number | null
  donatedAmount_lte?: number | null
  donatedAmount_gt?: number | null
  donatedAmount_gte?: number | null
  status?: prisma.TransactionStatus | null
  status_not?: prisma.TransactionStatus | null
  status_in?: prisma.TransactionStatus[]
  status_not_in?: prisma.TransactionStatus[]
  offer?: OfferWhereInput | null
  AND?: TransactionWhereInput[]
  OR?: TransactionWhereInput[]
  NOT?: TransactionWhereInput[]
}
export type TransactionWhereInputInputObject =
  | Extract<keyof TransactionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'comment_not', alias?: string  } 
  | { name: 'comment_in', alias?: string  } 
  | { name: 'comment_not_in', alias?: string  } 
  | { name: 'comment_lt', alias?: string  } 
  | { name: 'comment_lte', alias?: string  } 
  | { name: 'comment_gt', alias?: string  } 
  | { name: 'comment_gte', alias?: string  } 
  | { name: 'comment_contains', alias?: string  } 
  | { name: 'comment_not_contains', alias?: string  } 
  | { name: 'comment_starts_with', alias?: string  } 
  | { name: 'comment_not_starts_with', alias?: string  } 
  | { name: 'comment_ends_with', alias?: string  } 
  | { name: 'comment_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'donatedAmount_not', alias?: string  } 
  | { name: 'donatedAmount_in', alias?: string  } 
  | { name: 'donatedAmount_not_in', alias?: string  } 
  | { name: 'donatedAmount_lt', alias?: string  } 
  | { name: 'donatedAmount_lte', alias?: string  } 
  | { name: 'donatedAmount_gt', alias?: string  } 
  | { name: 'donatedAmount_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'offer', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  apiId?: number | null
  apiId_not?: number | null
  apiId_in?: number[]
  apiId_not_in?: number[]
  apiId_lt?: number | null
  apiId_lte?: number | null
  apiId_gt?: number | null
  apiId_gte?: number | null
  apiSecret?: string | null
  apiSecret_not?: string | null
  apiSecret_in?: string[]
  apiSecret_not_in?: string[]
  apiSecret_lt?: string | null
  apiSecret_lte?: string | null
  apiSecret_gt?: string | null
  apiSecret_gte?: string | null
  apiSecret_contains?: string | null
  apiSecret_not_contains?: string | null
  apiSecret_starts_with?: string | null
  apiSecret_not_starts_with?: string | null
  apiSecret_ends_with?: string | null
  apiSecret_not_ends_with?: string | null
  organizationId?: number | null
  organizationId_not?: number | null
  organizationId_in?: number[]
  organizationId_not_in?: number[]
  organizationId_lt?: number | null
  organizationId_lte?: number | null
  organizationId_gt?: number | null
  organizationId_gte?: number | null
  active?: boolean | null
  active_not?: boolean | null
  logo?: FileWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  offers_every?: OfferWhereInput | null
  offers_some?: OfferWhereInput | null
  offers_none?: OfferWhereInput | null
  projectId?: number | null
  projectId_not?: number | null
  projectId_in?: number[]
  projectId_not_in?: number[]
  projectId_lt?: number | null
  projectId_lte?: number | null
  projectId_gt?: number | null
  projectId_gte?: number | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: OrganizationWhereInput[]
  OR?: OrganizationWhereInput[]
  NOT?: OrganizationWhereInput[]
}
export type OrganizationWhereInputInputObject =
  | Extract<keyof OrganizationWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'apiId', alias?: string  } 
  | { name: 'apiId_not', alias?: string  } 
  | { name: 'apiId_in', alias?: string  } 
  | { name: 'apiId_not_in', alias?: string  } 
  | { name: 'apiId_lt', alias?: string  } 
  | { name: 'apiId_lte', alias?: string  } 
  | { name: 'apiId_gt', alias?: string  } 
  | { name: 'apiId_gte', alias?: string  } 
  | { name: 'apiSecret', alias?: string  } 
  | { name: 'apiSecret_not', alias?: string  } 
  | { name: 'apiSecret_in', alias?: string  } 
  | { name: 'apiSecret_not_in', alias?: string  } 
  | { name: 'apiSecret_lt', alias?: string  } 
  | { name: 'apiSecret_lte', alias?: string  } 
  | { name: 'apiSecret_gt', alias?: string  } 
  | { name: 'apiSecret_gte', alias?: string  } 
  | { name: 'apiSecret_contains', alias?: string  } 
  | { name: 'apiSecret_not_contains', alias?: string  } 
  | { name: 'apiSecret_starts_with', alias?: string  } 
  | { name: 'apiSecret_not_starts_with', alias?: string  } 
  | { name: 'apiSecret_ends_with', alias?: string  } 
  | { name: 'apiSecret_not_ends_with', alias?: string  } 
  | { name: 'organizationId', alias?: string  } 
  | { name: 'organizationId_not', alias?: string  } 
  | { name: 'organizationId_in', alias?: string  } 
  | { name: 'organizationId_not_in', alias?: string  } 
  | { name: 'organizationId_lt', alias?: string  } 
  | { name: 'organizationId_lte', alias?: string  } 
  | { name: 'organizationId_gt', alias?: string  } 
  | { name: 'organizationId_gte', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'active_not', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'offers_every', alias?: string  } 
  | { name: 'offers_some', alias?: string  } 
  | { name: 'offers_none', alias?: string  } 
  | { name: 'projectId', alias?: string  } 
  | { name: 'projectId_not', alias?: string  } 
  | { name: 'projectId_in', alias?: string  } 
  | { name: 'projectId_not_in', alias?: string  } 
  | { name: 'projectId_lt', alias?: string  } 
  | { name: 'projectId_lte', alias?: string  } 
  | { name: 'projectId_gt', alias?: string  } 
  | { name: 'projectId_gte', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FileWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  key?: string | null
  key_not?: string | null
  key_in?: string[]
  key_not_in?: string[]
  key_lt?: string | null
  key_lte?: string | null
  key_gt?: string | null
  key_gte?: string | null
  key_contains?: string | null
  key_not_contains?: string | null
  key_starts_with?: string | null
  key_not_starts_with?: string | null
  key_ends_with?: string | null
  key_not_ends_with?: string | null
  fileName?: string | null
  fileName_not?: string | null
  fileName_in?: string[]
  fileName_not_in?: string[]
  fileName_lt?: string | null
  fileName_lte?: string | null
  fileName_gt?: string | null
  fileName_gte?: string | null
  fileName_contains?: string | null
  fileName_not_contains?: string | null
  fileName_starts_with?: string | null
  fileName_not_starts_with?: string | null
  fileName_ends_with?: string | null
  fileName_not_ends_with?: string | null
  mimeType?: string | null
  mimeType_not?: string | null
  mimeType_in?: string[]
  mimeType_not_in?: string[]
  mimeType_lt?: string | null
  mimeType_lte?: string | null
  mimeType_gt?: string | null
  mimeType_gte?: string | null
  mimeType_contains?: string | null
  mimeType_not_contains?: string | null
  mimeType_starts_with?: string | null
  mimeType_not_starts_with?: string | null
  mimeType_ends_with?: string | null
  mimeType_not_ends_with?: string | null
  encoding?: string | null
  encoding_not?: string | null
  encoding_in?: string[]
  encoding_not_in?: string[]
  encoding_lt?: string | null
  encoding_lte?: string | null
  encoding_gt?: string | null
  encoding_gte?: string | null
  encoding_contains?: string | null
  encoding_not_contains?: string | null
  encoding_starts_with?: string | null
  encoding_not_starts_with?: string | null
  encoding_ends_with?: string | null
  encoding_not_ends_with?: string | null
  url?: string | null
  url_not?: string | null
  url_in?: string[]
  url_not_in?: string[]
  url_lt?: string | null
  url_lte?: string | null
  url_gt?: string | null
  url_gte?: string | null
  url_contains?: string | null
  url_not_contains?: string | null
  url_starts_with?: string | null
  url_not_starts_with?: string | null
  url_ends_with?: string | null
  url_not_ends_with?: string | null
  AND?: FileWhereInput[]
  OR?: FileWhereInput[]
  NOT?: FileWhereInput[]
}
export type FileWhereInputInputObject =
  | Extract<keyof FileWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'key_not', alias?: string  } 
  | { name: 'key_in', alias?: string  } 
  | { name: 'key_not_in', alias?: string  } 
  | { name: 'key_lt', alias?: string  } 
  | { name: 'key_lte', alias?: string  } 
  | { name: 'key_gt', alias?: string  } 
  | { name: 'key_gte', alias?: string  } 
  | { name: 'key_contains', alias?: string  } 
  | { name: 'key_not_contains', alias?: string  } 
  | { name: 'key_starts_with', alias?: string  } 
  | { name: 'key_not_starts_with', alias?: string  } 
  | { name: 'key_ends_with', alias?: string  } 
  | { name: 'key_not_ends_with', alias?: string  } 
  | { name: 'fileName', alias?: string  } 
  | { name: 'fileName_not', alias?: string  } 
  | { name: 'fileName_in', alias?: string  } 
  | { name: 'fileName_not_in', alias?: string  } 
  | { name: 'fileName_lt', alias?: string  } 
  | { name: 'fileName_lte', alias?: string  } 
  | { name: 'fileName_gt', alias?: string  } 
  | { name: 'fileName_gte', alias?: string  } 
  | { name: 'fileName_contains', alias?: string  } 
  | { name: 'fileName_not_contains', alias?: string  } 
  | { name: 'fileName_starts_with', alias?: string  } 
  | { name: 'fileName_not_starts_with', alias?: string  } 
  | { name: 'fileName_ends_with', alias?: string  } 
  | { name: 'fileName_not_ends_with', alias?: string  } 
  | { name: 'mimeType', alias?: string  } 
  | { name: 'mimeType_not', alias?: string  } 
  | { name: 'mimeType_in', alias?: string  } 
  | { name: 'mimeType_not_in', alias?: string  } 
  | { name: 'mimeType_lt', alias?: string  } 
  | { name: 'mimeType_lte', alias?: string  } 
  | { name: 'mimeType_gt', alias?: string  } 
  | { name: 'mimeType_gte', alias?: string  } 
  | { name: 'mimeType_contains', alias?: string  } 
  | { name: 'mimeType_not_contains', alias?: string  } 
  | { name: 'mimeType_starts_with', alias?: string  } 
  | { name: 'mimeType_not_starts_with', alias?: string  } 
  | { name: 'mimeType_ends_with', alias?: string  } 
  | { name: 'mimeType_not_ends_with', alias?: string  } 
  | { name: 'encoding', alias?: string  } 
  | { name: 'encoding_not', alias?: string  } 
  | { name: 'encoding_in', alias?: string  } 
  | { name: 'encoding_not_in', alias?: string  } 
  | { name: 'encoding_lt', alias?: string  } 
  | { name: 'encoding_lte', alias?: string  } 
  | { name: 'encoding_gt', alias?: string  } 
  | { name: 'encoding_gte', alias?: string  } 
  | { name: 'encoding_contains', alias?: string  } 
  | { name: 'encoding_not_contains', alias?: string  } 
  | { name: 'encoding_starts_with', alias?: string  } 
  | { name: 'encoding_not_starts_with', alias?: string  } 
  | { name: 'encoding_ends_with', alias?: string  } 
  | { name: 'encoding_not_ends_with', alias?: string  } 
  | { name: 'url', alias?: string  } 
  | { name: 'url_not', alias?: string  } 
  | { name: 'url_in', alias?: string  } 
  | { name: 'url_not_in', alias?: string  } 
  | { name: 'url_lt', alias?: string  } 
  | { name: 'url_lte', alias?: string  } 
  | { name: 'url_gt', alias?: string  } 
  | { name: 'url_gte', alias?: string  } 
  | { name: 'url_contains', alias?: string  } 
  | { name: 'url_not_contains', alias?: string  } 
  | { name: 'url_starts_with', alias?: string  } 
  | { name: 'url_not_starts_with', alias?: string  } 
  | { name: 'url_ends_with', alias?: string  } 
  | { name: 'url_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  role?: prisma.UserRole | null
  role_not?: prisma.UserRole | null
  role_in?: prisma.UserRole[]
  role_not_in?: prisma.UserRole[]
  offers_every?: OfferWhereInput | null
  offers_some?: OfferWhereInput | null
  offers_none?: OfferWhereInput | null
  adress?: AdressWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'role_not', alias?: string  } 
  | { name: 'role_in', alias?: string  } 
  | { name: 'role_not_in', alias?: string  } 
  | { name: 'offers_every', alias?: string  } 
  | { name: 'offers_some', alias?: string  } 
  | { name: 'offers_none', alias?: string  } 
  | { name: 'adress', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AdressWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  city?: string | null
  city_not?: string | null
  city_in?: string[]
  city_not_in?: string[]
  city_lt?: string | null
  city_lte?: string | null
  city_gt?: string | null
  city_gte?: string | null
  city_contains?: string | null
  city_not_contains?: string | null
  city_starts_with?: string | null
  city_not_starts_with?: string | null
  city_ends_with?: string | null
  city_not_ends_with?: string | null
  street?: string | null
  street_not?: string | null
  street_in?: string[]
  street_not_in?: string[]
  street_lt?: string | null
  street_lte?: string | null
  street_gt?: string | null
  street_gte?: string | null
  street_contains?: string | null
  street_not_contains?: string | null
  street_starts_with?: string | null
  street_not_starts_with?: string | null
  street_ends_with?: string | null
  street_not_ends_with?: string | null
  postalCode?: string | null
  postalCode_not?: string | null
  postalCode_in?: string[]
  postalCode_not_in?: string[]
  postalCode_lt?: string | null
  postalCode_lte?: string | null
  postalCode_gt?: string | null
  postalCode_gte?: string | null
  postalCode_contains?: string | null
  postalCode_not_contains?: string | null
  postalCode_starts_with?: string | null
  postalCode_not_starts_with?: string | null
  postalCode_ends_with?: string | null
  postalCode_not_ends_with?: string | null
  AND?: AdressWhereInput[]
  OR?: AdressWhereInput[]
  NOT?: AdressWhereInput[]
}
export type AdressWhereInputInputObject =
  | Extract<keyof AdressWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'city_not', alias?: string  } 
  | { name: 'city_in', alias?: string  } 
  | { name: 'city_not_in', alias?: string  } 
  | { name: 'city_lt', alias?: string  } 
  | { name: 'city_lte', alias?: string  } 
  | { name: 'city_gt', alias?: string  } 
  | { name: 'city_gte', alias?: string  } 
  | { name: 'city_contains', alias?: string  } 
  | { name: 'city_not_contains', alias?: string  } 
  | { name: 'city_starts_with', alias?: string  } 
  | { name: 'city_not_starts_with', alias?: string  } 
  | { name: 'city_ends_with', alias?: string  } 
  | { name: 'city_not_ends_with', alias?: string  } 
  | { name: 'street', alias?: string  } 
  | { name: 'street_not', alias?: string  } 
  | { name: 'street_in', alias?: string  } 
  | { name: 'street_not_in', alias?: string  } 
  | { name: 'street_lt', alias?: string  } 
  | { name: 'street_lte', alias?: string  } 
  | { name: 'street_gt', alias?: string  } 
  | { name: 'street_gte', alias?: string  } 
  | { name: 'street_contains', alias?: string  } 
  | { name: 'street_not_contains', alias?: string  } 
  | { name: 'street_starts_with', alias?: string  } 
  | { name: 'street_not_starts_with', alias?: string  } 
  | { name: 'street_ends_with', alias?: string  } 
  | { name: 'street_not_ends_with', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  | { name: 'postalCode_not', alias?: string  } 
  | { name: 'postalCode_in', alias?: string  } 
  | { name: 'postalCode_not_in', alias?: string  } 
  | { name: 'postalCode_lt', alias?: string  } 
  | { name: 'postalCode_lte', alias?: string  } 
  | { name: 'postalCode_gt', alias?: string  } 
  | { name: 'postalCode_gte', alias?: string  } 
  | { name: 'postalCode_contains', alias?: string  } 
  | { name: 'postalCode_not_contains', alias?: string  } 
  | { name: 'postalCode_starts_with', alias?: string  } 
  | { name: 'postalCode_not_starts_with', alias?: string  } 
  | { name: 'postalCode_ends_with', alias?: string  } 
  | { name: 'postalCode_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AdressWhereUniqueInput {
  id?: string | null
}
export type AdressWhereUniqueInputInputObject =
  | Extract<keyof AdressWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface FileWhereUniqueInput {
  id?: string | null
}
export type FileWhereUniqueInputInputObject =
  | Extract<keyof FileWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OfferWhereUniqueInput {
  id?: string | null
}
export type OfferWhereUniqueInputInputObject =
  | Extract<keyof OfferWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface TransactionWhereUniqueInput {
  id?: string | null
}
export type TransactionWhereUniqueInputInputObject =
  | Extract<keyof TransactionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrganizationWhereUniqueInput {
  id?: string | null
}
export type OrganizationWhereUniqueInputInputObject =
  | Extract<keyof OrganizationWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface UserCreateInput {
  id?: string | null
  email?: string
  firstName?: string | null
  lastName?: string | null
  password?: string | null
  role?: prisma.UserRole | null
  offers?: OfferCreateManyWithoutUserInput | null
  adress?: AdressCreateOneInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'offers', alias?: string  } 
  | { name: 'adress', alias?: string  } 
  
export interface OfferCreateManyWithoutUserInput {
  create?: OfferCreateWithoutUserInput[]
  connect?: OfferWhereUniqueInput[]
}
export type OfferCreateManyWithoutUserInputInputObject =
  | Extract<keyof OfferCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OfferCreateWithoutUserInput {
  id?: string | null
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string
  firstName?: string
  lastName?: string
  transactions?: TransactionCreateManyWithoutOfferInput | null
  beneficator?: OrganizationCreateOneWithoutOffersInput
  price?: number
  name?: string
  description?: string | null
  transport?: string | null
}
export type OfferCreateWithoutUserInputInputObject =
  | Extract<keyof OfferCreateWithoutUserInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'transactions', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface TransactionCreateManyWithoutOfferInput {
  create?: TransactionCreateWithoutOfferInput[]
  connect?: TransactionWhereUniqueInput[]
}
export type TransactionCreateManyWithoutOfferInputInputObject =
  | Extract<keyof TransactionCreateManyWithoutOfferInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TransactionCreateWithoutOfferInput {
  id?: string | null
  amount?: number
  email?: string
  firstName?: string
  lastName?: string
  comment?: string | null
  deletedAt?: string | null
  donatedAmount?: number | null
  status?: prisma.TransactionStatus | null
}
export type TransactionCreateWithoutOfferInputInputObject =
  | Extract<keyof TransactionCreateWithoutOfferInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OrganizationCreateOneWithoutOffersInput {
  create?: OrganizationCreateWithoutOffersInput | null
  connect?: OrganizationWhereUniqueInput | null
}
export type OrganizationCreateOneWithoutOffersInputInputObject =
  | Extract<keyof OrganizationCreateOneWithoutOffersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationCreateWithoutOffersInput {
  id?: string | null
  apiId?: number | null
  apiSecret?: string | null
  organizationId?: number | null
  active?: boolean
  logo?: FileCreateOneInput
  deletedAt?: string | null
  name?: string
  projectId?: number | null
  description?: string
  url?: string
}
export type OrganizationCreateWithoutOffersInputInputObject =
  | Extract<keyof OrganizationCreateWithoutOffersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiId', alias?: string  } 
  | { name: 'apiSecret', alias?: string  } 
  | { name: 'organizationId', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'projectId', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FileCreateOneInput {
  create?: FileCreateInput | null
  connect?: FileWhereUniqueInput | null
}
export type FileCreateOneInputInputObject =
  | Extract<keyof FileCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface FileCreateInput {
  id?: string | null
  key?: string
  fileName?: string
  mimeType?: string
  encoding?: string
  url?: string
}
export type FileCreateInputInputObject =
  | Extract<keyof FileCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'key', alias?: string  } 
  | { name: 'fileName', alias?: string  } 
  | { name: 'mimeType', alias?: string  } 
  | { name: 'encoding', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface AdressCreateOneInput {
  create?: AdressCreateInput | null
  connect?: AdressWhereUniqueInput | null
}
export type AdressCreateOneInputInputObject =
  | Extract<keyof AdressCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AdressCreateInput {
  id?: string | null
  city?: string | null
  street?: string | null
  postalCode?: string | null
}
export type AdressCreateInputInputObject =
  | Extract<keyof AdressCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'street', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface UserUpdateInput {
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  password?: string | null
  role?: prisma.UserRole | null
  offers?: OfferUpdateManyWithoutUserInput | null
  adress?: AdressUpdateOneInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'offers', alias?: string  } 
  | { name: 'adress', alias?: string  } 
  
export interface OfferUpdateManyWithoutUserInput {
  create?: OfferCreateWithoutUserInput[]
  delete?: OfferWhereUniqueInput[]
  connect?: OfferWhereUniqueInput[]
  set?: OfferWhereUniqueInput[]
  disconnect?: OfferWhereUniqueInput[]
  update?: OfferUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: OfferUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: OfferScalarWhereInput[]
  updateMany?: OfferUpdateManyWithWhereNestedInput[]
}
export type OfferUpdateManyWithoutUserInputInputObject =
  | Extract<keyof OfferUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OfferUpdateWithWhereUniqueWithoutUserInput {
  where?: OfferWhereUniqueInput
  data?: OfferUpdateWithoutUserDataInput
}
export type OfferUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof OfferUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OfferUpdateWithoutUserDataInput {
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  transactions?: TransactionUpdateManyWithoutOfferInput | null
  beneficator?: OrganizationUpdateOneRequiredWithoutOffersInput | null
  price?: number | null
  name?: string | null
  description?: string | null
  transport?: string | null
}
export type OfferUpdateWithoutUserDataInputInputObject =
  | Extract<keyof OfferUpdateWithoutUserDataInput, string>
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'transactions', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface TransactionUpdateManyWithoutOfferInput {
  create?: TransactionCreateWithoutOfferInput[]
  delete?: TransactionWhereUniqueInput[]
  connect?: TransactionWhereUniqueInput[]
  set?: TransactionWhereUniqueInput[]
  disconnect?: TransactionWhereUniqueInput[]
  update?: TransactionUpdateWithWhereUniqueWithoutOfferInput[]
  upsert?: TransactionUpsertWithWhereUniqueWithoutOfferInput[]
  deleteMany?: TransactionScalarWhereInput[]
  updateMany?: TransactionUpdateManyWithWhereNestedInput[]
}
export type TransactionUpdateManyWithoutOfferInputInputObject =
  | Extract<keyof TransactionUpdateManyWithoutOfferInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface TransactionUpdateWithWhereUniqueWithoutOfferInput {
  where?: TransactionWhereUniqueInput
  data?: TransactionUpdateWithoutOfferDataInput
}
export type TransactionUpdateWithWhereUniqueWithoutOfferInputInputObject =
  | Extract<keyof TransactionUpdateWithWhereUniqueWithoutOfferInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TransactionUpdateWithoutOfferDataInput {
  amount?: number | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  comment?: string | null
  deletedAt?: string | null
  donatedAmount?: number | null
  status?: prisma.TransactionStatus | null
}
export type TransactionUpdateWithoutOfferDataInputInputObject =
  | Extract<keyof TransactionUpdateWithoutOfferDataInput, string>
  | { name: 'amount', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface TransactionUpsertWithWhereUniqueWithoutOfferInput {
  where?: TransactionWhereUniqueInput
  update?: TransactionUpdateWithoutOfferDataInput
  create?: TransactionCreateWithoutOfferInput
}
export type TransactionUpsertWithWhereUniqueWithoutOfferInputInputObject =
  | Extract<keyof TransactionUpsertWithWhereUniqueWithoutOfferInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TransactionScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  comment?: string | null
  comment_not?: string | null
  comment_in?: string[]
  comment_not_in?: string[]
  comment_lt?: string | null
  comment_lte?: string | null
  comment_gt?: string | null
  comment_gte?: string | null
  comment_contains?: string | null
  comment_not_contains?: string | null
  comment_starts_with?: string | null
  comment_not_starts_with?: string | null
  comment_ends_with?: string | null
  comment_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  donatedAmount?: number | null
  donatedAmount_not?: number | null
  donatedAmount_in?: number[]
  donatedAmount_not_in?: number[]
  donatedAmount_lt?: number | null
  donatedAmount_lte?: number | null
  donatedAmount_gt?: number | null
  donatedAmount_gte?: number | null
  status?: prisma.TransactionStatus | null
  status_not?: prisma.TransactionStatus | null
  status_in?: prisma.TransactionStatus[]
  status_not_in?: prisma.TransactionStatus[]
  AND?: TransactionScalarWhereInput[]
  OR?: TransactionScalarWhereInput[]
  NOT?: TransactionScalarWhereInput[]
}
export type TransactionScalarWhereInputInputObject =
  | Extract<keyof TransactionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'comment_not', alias?: string  } 
  | { name: 'comment_in', alias?: string  } 
  | { name: 'comment_not_in', alias?: string  } 
  | { name: 'comment_lt', alias?: string  } 
  | { name: 'comment_lte', alias?: string  } 
  | { name: 'comment_gt', alias?: string  } 
  | { name: 'comment_gte', alias?: string  } 
  | { name: 'comment_contains', alias?: string  } 
  | { name: 'comment_not_contains', alias?: string  } 
  | { name: 'comment_starts_with', alias?: string  } 
  | { name: 'comment_not_starts_with', alias?: string  } 
  | { name: 'comment_ends_with', alias?: string  } 
  | { name: 'comment_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'donatedAmount_not', alias?: string  } 
  | { name: 'donatedAmount_in', alias?: string  } 
  | { name: 'donatedAmount_not_in', alias?: string  } 
  | { name: 'donatedAmount_lt', alias?: string  } 
  | { name: 'donatedAmount_lte', alias?: string  } 
  | { name: 'donatedAmount_gt', alias?: string  } 
  | { name: 'donatedAmount_gte', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TransactionUpdateManyWithWhereNestedInput {
  where?: TransactionScalarWhereInput
  data?: TransactionUpdateManyDataInput
}
export type TransactionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof TransactionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface TransactionUpdateManyDataInput {
  amount?: number | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  comment?: string | null
  deletedAt?: string | null
  donatedAmount?: number | null
  status?: prisma.TransactionStatus | null
}
export type TransactionUpdateManyDataInputInputObject =
  | Extract<keyof TransactionUpdateManyDataInput, string>
  | { name: 'amount', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OrganizationUpdateOneRequiredWithoutOffersInput {
  create?: OrganizationCreateWithoutOffersInput | null
  update?: OrganizationUpdateWithoutOffersDataInput | null
  upsert?: OrganizationUpsertWithoutOffersInput | null
  connect?: OrganizationWhereUniqueInput | null
}
export type OrganizationUpdateOneRequiredWithoutOffersInputInputObject =
  | Extract<keyof OrganizationUpdateOneRequiredWithoutOffersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrganizationUpdateWithoutOffersDataInput {
  apiId?: number | null
  apiSecret?: string | null
  organizationId?: number | null
  active?: boolean | null
  logo?: FileUpdateOneRequiredInput | null
  deletedAt?: string | null
  name?: string | null
  projectId?: number | null
  description?: string | null
  url?: string | null
}
export type OrganizationUpdateWithoutOffersDataInputInputObject =
  | Extract<keyof OrganizationUpdateWithoutOffersDataInput, string>
  | { name: 'apiId', alias?: string  } 
  | { name: 'apiSecret', alias?: string  } 
  | { name: 'organizationId', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'projectId', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FileUpdateOneRequiredInput {
  create?: FileCreateInput | null
  update?: FileUpdateDataInput | null
  upsert?: FileUpsertNestedInput | null
  connect?: FileWhereUniqueInput | null
}
export type FileUpdateOneRequiredInputInputObject =
  | Extract<keyof FileUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface FileUpdateDataInput {
  key?: string | null
  fileName?: string | null
  mimeType?: string | null
  encoding?: string | null
  url?: string | null
}
export type FileUpdateDataInputInputObject =
  | Extract<keyof FileUpdateDataInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'fileName', alias?: string  } 
  | { name: 'mimeType', alias?: string  } 
  | { name: 'encoding', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FileUpsertNestedInput {
  update?: FileUpdateDataInput
  create?: FileCreateInput
}
export type FileUpsertNestedInputInputObject =
  | Extract<keyof FileUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationUpsertWithoutOffersInput {
  update?: OrganizationUpdateWithoutOffersDataInput
  create?: OrganizationCreateWithoutOffersInput
}
export type OrganizationUpsertWithoutOffersInputInputObject =
  | Extract<keyof OrganizationUpsertWithoutOffersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OfferUpsertWithWhereUniqueWithoutUserInput {
  where?: OfferWhereUniqueInput
  update?: OfferUpdateWithoutUserDataInput
  create?: OfferCreateWithoutUserInput
}
export type OfferUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof OfferUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OfferScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  active?: boolean | null
  active_not?: boolean | null
  public?: boolean | null
  public_not?: boolean | null
  amount?: number | null
  amount_not?: number | null
  amount_in?: number[]
  amount_not_in?: number[]
  amount_lt?: number | null
  amount_lte?: number | null
  amount_gt?: number | null
  amount_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  deletedAt?: string | null
  deletedAt_not?: string | null
  deletedAt_in?: string[]
  deletedAt_not_in?: string[]
  deletedAt_lt?: string | null
  deletedAt_lte?: string | null
  deletedAt_gt?: string | null
  deletedAt_gte?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  firstName?: string | null
  firstName_not?: string | null
  firstName_in?: string[]
  firstName_not_in?: string[]
  firstName_lt?: string | null
  firstName_lte?: string | null
  firstName_gt?: string | null
  firstName_gte?: string | null
  firstName_contains?: string | null
  firstName_not_contains?: string | null
  firstName_starts_with?: string | null
  firstName_not_starts_with?: string | null
  firstName_ends_with?: string | null
  firstName_not_ends_with?: string | null
  lastName?: string | null
  lastName_not?: string | null
  lastName_in?: string[]
  lastName_not_in?: string[]
  lastName_lt?: string | null
  lastName_lte?: string | null
  lastName_gt?: string | null
  lastName_gte?: string | null
  lastName_contains?: string | null
  lastName_not_contains?: string | null
  lastName_starts_with?: string | null
  lastName_not_starts_with?: string | null
  lastName_ends_with?: string | null
  lastName_not_ends_with?: string | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  transport?: string | null
  transport_not?: string | null
  transport_in?: string[]
  transport_not_in?: string[]
  transport_lt?: string | null
  transport_lte?: string | null
  transport_gt?: string | null
  transport_gte?: string | null
  transport_contains?: string | null
  transport_not_contains?: string | null
  transport_starts_with?: string | null
  transport_not_starts_with?: string | null
  transport_ends_with?: string | null
  transport_not_ends_with?: string | null
  AND?: OfferScalarWhereInput[]
  OR?: OfferScalarWhereInput[]
  NOT?: OfferScalarWhereInput[]
}
export type OfferScalarWhereInputInputObject =
  | Extract<keyof OfferScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'active_not', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'public_not', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'amount_not', alias?: string  } 
  | { name: 'amount_in', alias?: string  } 
  | { name: 'amount_not_in', alias?: string  } 
  | { name: 'amount_lt', alias?: string  } 
  | { name: 'amount_lte', alias?: string  } 
  | { name: 'amount_gt', alias?: string  } 
  | { name: 'amount_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'deletedAt_not', alias?: string  } 
  | { name: 'deletedAt_in', alias?: string  } 
  | { name: 'deletedAt_not_in', alias?: string  } 
  | { name: 'deletedAt_lt', alias?: string  } 
  | { name: 'deletedAt_lte', alias?: string  } 
  | { name: 'deletedAt_gt', alias?: string  } 
  | { name: 'deletedAt_gte', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'firstName_not', alias?: string  } 
  | { name: 'firstName_in', alias?: string  } 
  | { name: 'firstName_not_in', alias?: string  } 
  | { name: 'firstName_lt', alias?: string  } 
  | { name: 'firstName_lte', alias?: string  } 
  | { name: 'firstName_gt', alias?: string  } 
  | { name: 'firstName_gte', alias?: string  } 
  | { name: 'firstName_contains', alias?: string  } 
  | { name: 'firstName_not_contains', alias?: string  } 
  | { name: 'firstName_starts_with', alias?: string  } 
  | { name: 'firstName_not_starts_with', alias?: string  } 
  | { name: 'firstName_ends_with', alias?: string  } 
  | { name: 'firstName_not_ends_with', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'lastName_not', alias?: string  } 
  | { name: 'lastName_in', alias?: string  } 
  | { name: 'lastName_not_in', alias?: string  } 
  | { name: 'lastName_lt', alias?: string  } 
  | { name: 'lastName_lte', alias?: string  } 
  | { name: 'lastName_gt', alias?: string  } 
  | { name: 'lastName_gte', alias?: string  } 
  | { name: 'lastName_contains', alias?: string  } 
  | { name: 'lastName_not_contains', alias?: string  } 
  | { name: 'lastName_starts_with', alias?: string  } 
  | { name: 'lastName_not_starts_with', alias?: string  } 
  | { name: 'lastName_ends_with', alias?: string  } 
  | { name: 'lastName_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  | { name: 'transport_not', alias?: string  } 
  | { name: 'transport_in', alias?: string  } 
  | { name: 'transport_not_in', alias?: string  } 
  | { name: 'transport_lt', alias?: string  } 
  | { name: 'transport_lte', alias?: string  } 
  | { name: 'transport_gt', alias?: string  } 
  | { name: 'transport_gte', alias?: string  } 
  | { name: 'transport_contains', alias?: string  } 
  | { name: 'transport_not_contains', alias?: string  } 
  | { name: 'transport_starts_with', alias?: string  } 
  | { name: 'transport_not_starts_with', alias?: string  } 
  | { name: 'transport_ends_with', alias?: string  } 
  | { name: 'transport_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OfferUpdateManyWithWhereNestedInput {
  where?: OfferScalarWhereInput
  data?: OfferUpdateManyDataInput
}
export type OfferUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OfferUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OfferUpdateManyDataInput {
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  price?: number | null
  name?: string | null
  description?: string | null
  transport?: string | null
}
export type OfferUpdateManyDataInputInputObject =
  | Extract<keyof OfferUpdateManyDataInput, string>
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface AdressUpdateOneInput {
  create?: AdressCreateInput | null
  update?: AdressUpdateDataInput | null
  upsert?: AdressUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: AdressWhereUniqueInput | null
}
export type AdressUpdateOneInputInputObject =
  | Extract<keyof AdressUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AdressUpdateDataInput {
  city?: string | null
  street?: string | null
  postalCode?: string | null
}
export type AdressUpdateDataInputInputObject =
  | Extract<keyof AdressUpdateDataInput, string>
  | { name: 'city', alias?: string  } 
  | { name: 'street', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface AdressUpsertNestedInput {
  update?: AdressUpdateDataInput
  create?: AdressCreateInput
}
export type AdressUpsertNestedInputInputObject =
  | Extract<keyof AdressUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  password?: string | null
  role?: prisma.UserRole | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'role', alias?: string  } 
  
export interface AdressUpdateInput {
  city?: string | null
  street?: string | null
  postalCode?: string | null
}
export type AdressUpdateInputInputObject =
  | Extract<keyof AdressUpdateInput, string>
  | { name: 'city', alias?: string  } 
  | { name: 'street', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface AdressUpdateManyMutationInput {
  city?: string | null
  street?: string | null
  postalCode?: string | null
}
export type AdressUpdateManyMutationInputInputObject =
  | Extract<keyof AdressUpdateManyMutationInput, string>
  | { name: 'city', alias?: string  } 
  | { name: 'street', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface FileUpdateInput {
  key?: string | null
  fileName?: string | null
  mimeType?: string | null
  encoding?: string | null
  url?: string | null
}
export type FileUpdateInputInputObject =
  | Extract<keyof FileUpdateInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'fileName', alias?: string  } 
  | { name: 'mimeType', alias?: string  } 
  | { name: 'encoding', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface FileUpdateManyMutationInput {
  key?: string | null
  fileName?: string | null
  mimeType?: string | null
  encoding?: string | null
  url?: string | null
}
export type FileUpdateManyMutationInputInputObject =
  | Extract<keyof FileUpdateManyMutationInput, string>
  | { name: 'key', alias?: string  } 
  | { name: 'fileName', alias?: string  } 
  | { name: 'mimeType', alias?: string  } 
  | { name: 'encoding', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface OfferCreateInput {
  id?: string | null
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string
  firstName?: string
  lastName?: string
  transactions?: TransactionCreateManyWithoutOfferInput | null
  beneficator?: OrganizationCreateOneWithoutOffersInput
  price?: number
  name?: string
  user?: UserCreateOneWithoutOffersInput
  description?: string | null
  transport?: string | null
}
export type OfferCreateInputInputObject =
  | Extract<keyof OfferCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'transactions', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface UserCreateOneWithoutOffersInput {
  create?: UserCreateWithoutOffersInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutOffersInputInputObject =
  | Extract<keyof UserCreateOneWithoutOffersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutOffersInput {
  id?: string | null
  email?: string
  firstName?: string | null
  lastName?: string | null
  password?: string | null
  role?: prisma.UserRole | null
  adress?: AdressCreateOneInput | null
}
export type UserCreateWithoutOffersInputInputObject =
  | Extract<keyof UserCreateWithoutOffersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'adress', alias?: string  } 
  
export interface OfferUpdateInput {
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  transactions?: TransactionUpdateManyWithoutOfferInput | null
  beneficator?: OrganizationUpdateOneRequiredWithoutOffersInput | null
  price?: number | null
  name?: string | null
  user?: UserUpdateOneRequiredWithoutOffersInput | null
  description?: string | null
  transport?: string | null
}
export type OfferUpdateInputInputObject =
  | Extract<keyof OfferUpdateInput, string>
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'transactions', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface UserUpdateOneRequiredWithoutOffersInput {
  create?: UserCreateWithoutOffersInput | null
  update?: UserUpdateWithoutOffersDataInput | null
  upsert?: UserUpsertWithoutOffersInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneRequiredWithoutOffersInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutOffersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutOffersDataInput {
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  password?: string | null
  role?: prisma.UserRole | null
  adress?: AdressUpdateOneInput | null
}
export type UserUpdateWithoutOffersDataInputInputObject =
  | Extract<keyof UserUpdateWithoutOffersDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'role', alias?: string  } 
  | { name: 'adress', alias?: string  } 
  
export interface UserUpsertWithoutOffersInput {
  update?: UserUpdateWithoutOffersDataInput
  create?: UserCreateWithoutOffersInput
}
export type UserUpsertWithoutOffersInputInputObject =
  | Extract<keyof UserUpsertWithoutOffersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OfferUpdateManyMutationInput {
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  price?: number | null
  name?: string | null
  description?: string | null
  transport?: string | null
}
export type OfferUpdateManyMutationInputInputObject =
  | Extract<keyof OfferUpdateManyMutationInput, string>
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface TransactionCreateInput {
  id?: string | null
  amount?: number
  email?: string
  firstName?: string
  lastName?: string
  comment?: string | null
  deletedAt?: string | null
  donatedAmount?: number | null
  status?: prisma.TransactionStatus | null
  offer?: OfferCreateOneWithoutTransactionsInput
}
export type TransactionCreateInputInputObject =
  | Extract<keyof TransactionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'offer', alias?: string  } 
  
export interface OfferCreateOneWithoutTransactionsInput {
  create?: OfferCreateWithoutTransactionsInput | null
  connect?: OfferWhereUniqueInput | null
}
export type OfferCreateOneWithoutTransactionsInputInputObject =
  | Extract<keyof OfferCreateOneWithoutTransactionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OfferCreateWithoutTransactionsInput {
  id?: string | null
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string
  firstName?: string
  lastName?: string
  beneficator?: OrganizationCreateOneWithoutOffersInput
  price?: number
  name?: string
  user?: UserCreateOneWithoutOffersInput
  description?: string | null
  transport?: string | null
}
export type OfferCreateWithoutTransactionsInputInputObject =
  | Extract<keyof OfferCreateWithoutTransactionsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface TransactionUpdateInput {
  amount?: number | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  comment?: string | null
  deletedAt?: string | null
  donatedAmount?: number | null
  status?: prisma.TransactionStatus | null
  offer?: OfferUpdateOneRequiredWithoutTransactionsInput | null
}
export type TransactionUpdateInputInputObject =
  | Extract<keyof TransactionUpdateInput, string>
  | { name: 'amount', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'offer', alias?: string  } 
  
export interface OfferUpdateOneRequiredWithoutTransactionsInput {
  create?: OfferCreateWithoutTransactionsInput | null
  update?: OfferUpdateWithoutTransactionsDataInput | null
  upsert?: OfferUpsertWithoutTransactionsInput | null
  connect?: OfferWhereUniqueInput | null
}
export type OfferUpdateOneRequiredWithoutTransactionsInputInputObject =
  | Extract<keyof OfferUpdateOneRequiredWithoutTransactionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OfferUpdateWithoutTransactionsDataInput {
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  beneficator?: OrganizationUpdateOneRequiredWithoutOffersInput | null
  price?: number | null
  name?: string | null
  user?: UserUpdateOneRequiredWithoutOffersInput | null
  description?: string | null
  transport?: string | null
}
export type OfferUpdateWithoutTransactionsDataInputInputObject =
  | Extract<keyof OfferUpdateWithoutTransactionsDataInput, string>
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'beneficator', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface OfferUpsertWithoutTransactionsInput {
  update?: OfferUpdateWithoutTransactionsDataInput
  create?: OfferCreateWithoutTransactionsInput
}
export type OfferUpsertWithoutTransactionsInputInputObject =
  | Extract<keyof OfferUpsertWithoutTransactionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TransactionUpdateManyMutationInput {
  amount?: number | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  comment?: string | null
  deletedAt?: string | null
  donatedAmount?: number | null
  status?: prisma.TransactionStatus | null
}
export type TransactionUpdateManyMutationInputInputObject =
  | Extract<keyof TransactionUpdateManyMutationInput, string>
  | { name: 'amount', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'comment', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'donatedAmount', alias?: string  } 
  | { name: 'status', alias?: string  } 
  
export interface OrganizationCreateInput {
  id?: string | null
  apiId?: number | null
  apiSecret?: string | null
  organizationId?: number | null
  active?: boolean
  logo?: FileCreateOneInput
  deletedAt?: string | null
  name?: string
  offers?: OfferCreateManyWithoutBeneficatorInput | null
  projectId?: number | null
  description?: string
  url?: string
}
export type OrganizationCreateInputInputObject =
  | Extract<keyof OrganizationCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'apiId', alias?: string  } 
  | { name: 'apiSecret', alias?: string  } 
  | { name: 'organizationId', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'offers', alias?: string  } 
  | { name: 'projectId', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface OfferCreateManyWithoutBeneficatorInput {
  create?: OfferCreateWithoutBeneficatorInput[]
  connect?: OfferWhereUniqueInput[]
}
export type OfferCreateManyWithoutBeneficatorInputInputObject =
  | Extract<keyof OfferCreateManyWithoutBeneficatorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OfferCreateWithoutBeneficatorInput {
  id?: string | null
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string
  firstName?: string
  lastName?: string
  transactions?: TransactionCreateManyWithoutOfferInput | null
  price?: number
  name?: string
  user?: UserCreateOneWithoutOffersInput
  description?: string | null
  transport?: string | null
}
export type OfferCreateWithoutBeneficatorInputInputObject =
  | Extract<keyof OfferCreateWithoutBeneficatorInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'transactions', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface OrganizationUpdateInput {
  apiId?: number | null
  apiSecret?: string | null
  organizationId?: number | null
  active?: boolean | null
  logo?: FileUpdateOneRequiredInput | null
  deletedAt?: string | null
  name?: string | null
  offers?: OfferUpdateManyWithoutBeneficatorInput | null
  projectId?: number | null
  description?: string | null
  url?: string | null
}
export type OrganizationUpdateInputInputObject =
  | Extract<keyof OrganizationUpdateInput, string>
  | { name: 'apiId', alias?: string  } 
  | { name: 'apiSecret', alias?: string  } 
  | { name: 'organizationId', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'offers', alias?: string  } 
  | { name: 'projectId', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface OfferUpdateManyWithoutBeneficatorInput {
  create?: OfferCreateWithoutBeneficatorInput[]
  delete?: OfferWhereUniqueInput[]
  connect?: OfferWhereUniqueInput[]
  set?: OfferWhereUniqueInput[]
  disconnect?: OfferWhereUniqueInput[]
  update?: OfferUpdateWithWhereUniqueWithoutBeneficatorInput[]
  upsert?: OfferUpsertWithWhereUniqueWithoutBeneficatorInput[]
  deleteMany?: OfferScalarWhereInput[]
  updateMany?: OfferUpdateManyWithWhereNestedInput[]
}
export type OfferUpdateManyWithoutBeneficatorInputInputObject =
  | Extract<keyof OfferUpdateManyWithoutBeneficatorInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OfferUpdateWithWhereUniqueWithoutBeneficatorInput {
  where?: OfferWhereUniqueInput
  data?: OfferUpdateWithoutBeneficatorDataInput
}
export type OfferUpdateWithWhereUniqueWithoutBeneficatorInputInputObject =
  | Extract<keyof OfferUpdateWithWhereUniqueWithoutBeneficatorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OfferUpdateWithoutBeneficatorDataInput {
  active?: boolean | null
  public?: boolean | null
  amount?: number | null
  deletedAt?: string | null
  email?: string | null
  firstName?: string | null
  lastName?: string | null
  transactions?: TransactionUpdateManyWithoutOfferInput | null
  price?: number | null
  name?: string | null
  user?: UserUpdateOneRequiredWithoutOffersInput | null
  description?: string | null
  transport?: string | null
}
export type OfferUpdateWithoutBeneficatorDataInputInputObject =
  | Extract<keyof OfferUpdateWithoutBeneficatorDataInput, string>
  | { name: 'active', alias?: string  } 
  | { name: 'public', alias?: string  } 
  | { name: 'amount', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'firstName', alias?: string  } 
  | { name: 'lastName', alias?: string  } 
  | { name: 'transactions', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'transport', alias?: string  } 
  
export interface OfferUpsertWithWhereUniqueWithoutBeneficatorInput {
  where?: OfferWhereUniqueInput
  update?: OfferUpdateWithoutBeneficatorDataInput
  create?: OfferCreateWithoutBeneficatorInput
}
export type OfferUpsertWithWhereUniqueWithoutBeneficatorInputInputObject =
  | Extract<keyof OfferUpsertWithWhereUniqueWithoutBeneficatorInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrganizationUpdateManyMutationInput {
  apiId?: number | null
  apiSecret?: string | null
  organizationId?: number | null
  active?: boolean | null
  deletedAt?: string | null
  name?: string | null
  projectId?: number | null
  description?: string | null
  url?: string | null
}
export type OrganizationUpdateManyMutationInputInputObject =
  | Extract<keyof OrganizationUpdateManyMutationInput, string>
  | { name: 'apiId', alias?: string  } 
  | { name: 'apiSecret', alias?: string  } 
  | { name: 'organizationId', alias?: string  } 
  | { name: 'active', alias?: string  } 
  | { name: 'deletedAt', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'projectId', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'url', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AdressSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AdressWhereInput | null
  AND?: AdressSubscriptionWhereInput[]
  OR?: AdressSubscriptionWhereInput[]
  NOT?: AdressSubscriptionWhereInput[]
}
export type AdressSubscriptionWhereInputInputObject =
  | Extract<keyof AdressSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface FileSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: FileWhereInput | null
  AND?: FileSubscriptionWhereInput[]
  OR?: FileSubscriptionWhereInput[]
  NOT?: FileSubscriptionWhereInput[]
}
export type FileSubscriptionWhereInputInputObject =
  | Extract<keyof FileSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OfferSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OfferWhereInput | null
  AND?: OfferSubscriptionWhereInput[]
  OR?: OfferSubscriptionWhereInput[]
  NOT?: OfferSubscriptionWhereInput[]
}
export type OfferSubscriptionWhereInputInputObject =
  | Extract<keyof OfferSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TransactionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TransactionWhereInput | null
  AND?: TransactionSubscriptionWhereInput[]
  OR?: TransactionSubscriptionWhereInput[]
  NOT?: TransactionSubscriptionWhereInput[]
}
export type TransactionSubscriptionWhereInputInputObject =
  | Extract<keyof TransactionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrganizationSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrganizationWhereInput | null
  AND?: OrganizationSubscriptionWhereInput[]
  OR?: OrganizationSubscriptionWhereInput[]
  NOT?: OrganizationSubscriptionWhereInput[]
}
export type OrganizationSubscriptionWhereInputInputObject =
  | Extract<keyof OrganizationSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type UserRoleValues =
  | 'USER'
  | 'ADMIN'
  
export type TransactionStatusValues =
  | 'PENDING'
  | 'PAID'
  | 'FAILED'
  | 'INSUFFICIENT'
  
export type OfferOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'active_ASC'
  | 'active_DESC'
  | 'public_ASC'
  | 'public_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'deletedAt_ASC'
  | 'deletedAt_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'transport_ASC'
  | 'transport_DESC'
  
export type TransactionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'amount_ASC'
  | 'amount_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'comment_ASC'
  | 'comment_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'deletedAt_ASC'
  | 'deletedAt_DESC'
  | 'donatedAmount_ASC'
  | 'donatedAmount_DESC'
  | 'status_ASC'
  | 'status_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'firstName_ASC'
  | 'firstName_DESC'
  | 'lastName_ASC'
  | 'lastName_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'role_ASC'
  | 'role_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type AdressOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'city_ASC'
  | 'city_DESC'
  | 'street_ASC'
  | 'street_DESC'
  | 'postalCode_ASC'
  | 'postalCode_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type FileOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'key_ASC'
  | 'key_DESC'
  | 'fileName_ASC'
  | 'fileName_DESC'
  | 'mimeType_ASC'
  | 'mimeType_DESC'
  | 'encoding_ASC'
  | 'encoding_DESC'
  | 'url_ASC'
  | 'url_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrganizationOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'apiId_ASC'
  | 'apiId_DESC'
  | 'apiSecret_ASC'
  | 'apiSecret_DESC'
  | 'organizationId_ASC'
  | 'organizationId_DESC'
  | 'active_ASC'
  | 'active_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'deletedAt_ASC'
  | 'deletedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'projectId_ASC'
  | 'projectId_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'url_ASC'
  | 'url_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  