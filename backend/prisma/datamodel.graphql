type User {
  id: ID! @id
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String @default(value: "")
  password: String
  role: UserRole! @default(value: USER)
  offers: [Offer!]!
  adress: Adress
}

type Adress {
  id: ID! @id
  city: String
  street: String
  postalCode: String
}

type File {
  id: ID! @id
  key: String!
  fileName: String!
  mimeType: String!
  encoding: String!
  url: String!
}

enum UserRole {
  USER
  ADMIN
}

type Gallery {
  id: ID! @id
  images: [File!]!
}

type Offer {
  id: ID! @id
  active: Boolean @default(value: true)
  publicOffer: Boolean @default(value: true)
  amount: Int!
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
  deletedAt: DateTime
  email: String!
  firstName: String!
  lastName: String!
  transactions: [Transaction!]!
  beneficator: Organization!
  price: Int!
  name: String!
  user: User!
  description: String!
  transport: String
  gallery: Gallery!
}

type Transaction {
  id: ID! @id
  amount: Int!
  email: String!
  firstName: String!
  lastName: String!
  comment: String
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
  deletedAt: DateTime
  donatedAmount: Int
  status: TransactionStatus! @default(value: PENDING)
  offer: Offer!
}

enum TransactionStatus {
  PENDING
  PAID
  FAILED
  INSUFFICIENT
}

type Organization {
  id: ID! @id
  apiId: Int
  apiSecret: String
  organizationId: Int
  active: Boolean!
  logo: File!
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
  deletedAt: DateTime
  name: String!
  offers: [Offer!]!
  projectId: Int
  description: String!
  url: String!
}
